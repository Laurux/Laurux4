' Gambas class file

' Gambas class file
'----------------------------------------------------------------------------
'

'
'Ce programme est un logiciel libre; Vous pouvez le redistribuer et/ou
'le modifier selon les termes de la GNU General PUBLIC License publiés par
'la Free Software Foundation.

'Ce programme est distribué sans garantie. Voyez la GNU General PUBLIC
'License pour plus de details.

'Vous devez lire la GNU General PUBLIC Licence.
'Si vous ne disposez pas d'un exemplaire, veuillez écrire
'à " The Free Software Foundation
'INC, 59 Temple place - Suite 33, Boston
'MA 02111-1307 USA
'----------------------------------------------------------------------------
'################################################
'# nom du fichier           : VisStatCA.class
'# Auteur                   : Jacky Tripoteau
'# date de création         : 28/04/2008
'# Chiffre d'affaire totalisé pour une période
'################################################

Public total As Integer
Public value As Float[]
Public Dtn0 As String
Public Dtn1 As String
Public Chk As String
Filename As String
son As Integer = Start.Son

Public Sub _New(Hitniv As StatCA, Soc As String, Sn As Integer, dte1 As String, dte2 As String, Chkmo As String, Tot As Integer)
  
  Dim Tab As String
  Dim Frmt As New String[]
  
  Frmt = Utils.FColr(Settings["/Coul/Fnets"])
  If Settings["/Soc" & Start.Societe & "/Coul_fen"] Then Utils.Observers(Me)
  filename = User.Home & "/Edstatca.kdf"
  Tab = "Total"
  value = New Float[]
  Total = Tot
  Chk = Chkmo
  son = Sn
  Dtn0 = dte1
  Dtn1 = dte2
  Me.center
  With Liste
    .Columns.count = 10
    .Columns[0].Width = 60
    .Columns[1].Width = 100
    .Columns[2].Width = 100
    .Columns[3].Width = 100
    .Columns[4].Width = 100
    .Columns[5].Width = 100
    .Columns[6].Width = 100
    .Columns[7].Width = 100
    .Columns[8].Width = 100
    .Columns[9].Width = 100
    .Columns[0].Text = "Mois"
    .Columns[0].Alignment = 3
    .Columns[1].Text = "Brut ht"
    .Columns[1].Alignment = 3
    .Columns[2].Text = "remise"
    .Columns[2].Alignment = 3
    .Columns[3].Text = "Net ht"
    .Columns[3].Alignment = 3
    .Columns[4].Text = "Marge Produit\n en valeur"
    .Columns[4].Alignment = 3
    .Columns[5].Text = "Marge Produit \n en %"
    .Columns[5].Alignment = 3
    .Columns[6].Text = "Marge Mo\n en valeur"
    .Columns[6].Alignment = 3
    .Columns[7].Text = "Marge Mo\n en %"
    .Columns[7].Alignment = 3
    .Columns[8].Text = "Total Marge\n en valeur"
    .Columns[8].Alignment = 3
    .Columns[9].Text = "Total Marge\n en %"
    .Columns[9].Alignment = 3
    Periode.Text = dte1 & " au " & dte2
    Affichage()
  End With
  
End

Public Sub Affichage()
  
  Dim Tab As String
  Dim rResult As Result
  Dim Tbrut As Float
  Dim Trem As Float
  Dim Tnet As Float
  Dim MargeA As Float
  Dim TmargeA As Float
  Dim MargeM As Float
  Dim TmargeM As Float
  Dim MargePA As Float
  Dim TmargePA As Float
  Dim MargePM As Float
  Dim TmargePM As Float
  Dim TotV As Float
  Dim TTotV As Float
  Dim TotP As Float
  Dim TTotP As Float
  Dim N As Float = 0
  
  Tab = "Total"
  TTotp = 0
  With Liste
    .clear
    value.Resize(Total + 1)
    rResult = Utils.db.Exec("SELECT * FROM " & Tab & "")
    If rResult.Available Then
      rResult.MoveFirst()
      Repeat
        n = n + 1
        value.Resize(n + 1)
        .Add(Right$(Str(rResult!date), 2) & "." & Left$(Str(rResult!date), 2), Right$(Str(rResult!date), 2) & "." & Left$(Str(rResult!date), 2))
        .Item[1] = Format$(rResult!brutfac, "0.00")
        .Item[2] = Format$(rResult!rmfac, "0.00")
        .Item[3] = Format$(rResult!totfac, "0.00")
        .Item[4] = Format$(rResult!marge_art, "0.00 ")
        .Item[5] = Format$(rResult!margepart, "0.00 ")
        .Item[6] = Format$(rResult!marge_mo, "0.00 ")
        .Item[7] = Format$(rResult!margepmo, "0.00 ")
        If Not IsNull(rResult!brutfac) Then
          Tbrut = Tbrut + rResult!brutfac
        Endif
        If Not IsNull(rResult!rmfac) Then
          Trem = Trem + rResult!rmfac
        Endif
        If Not IsNull(rResult!totfac) Then
          Tnet = Tnet + rResult!totfac
        Endif
        If Not IsNull(rResult!marge_art) Then
          MargeA = rResult!marge_art
        Else
          MargeA = 0
        Endif
        TmargeA = TmargeA + MargeA
        If Chk <> "0" Then
          If Not IsNull(rResult!marge_mo) Then
            MargeM = rResult!marge_mo
          Else
            '       MargeM = 0
          Endif
          TmargeM = TmargeM + MargeM
        Endif
        If Not IsNull(rResult!margepart) Then
          MargePA = rResult!margepart
        Else
          MargePA = 0
        Endif
        TmargePA = TmargePA + MargePA
        If Not IsNull(rResult!margepmo) Then
          MargePM = rResult!margepmo
        Else
          MargePM = 0
        Endif
        TmargePM = TmargePM + MargePM
        TotV = MargeA + MargeM
        TTotV = TmargeA + TmargeM
        If MargePA <> 0 And MargePM <> 0 Then
          TotP = MargePA + MargePM / 2
        Else
          TotP = MargePA + MargePM
        Endif
        TTotP = TTotP + TotP
        .Item[8] = Format$(TotV, "0.00")
        .Item[9] = Format$(TotP, "0.00")
        If RadioButton2.Value = True Then
          If Btot.value = True Then value[n] = Val(.Item[9])
          If Bprod.value = True Then value[n] = Val(.Item[5])
          If Bmo.value = True Then value[n] = Val(.Item[7])
        Else
          value[n] = Val(.Item[3])
        Endif
      Until rResult.MoveNext()
      Brutfac.Text = Format$(Tbrut, "0.00")
      Rmfac.Text = Format$(Trem, "0.00")
      Totfac.Text = Format$(Tnet, "0.00")
      TMargeart.Text = Format$(TmargeA, "0.00")
      TMargePart.Text = Format$(TmargePA / Liste.count, "0.00")
      TMargemo.Text = Format$(TMargeM, "0.00")
      TMargePmo.Text = Format$(TMargePM / Liste.count, "0.00")
      TMargev.Text = Format$(TTotV, "0.00")
      TMargep.Text = Format$(TTotP / Liste.count, "0.00")
    Endif
    value.Resize(total + 1)
    If Total > 12 Then Total = 12
    Draw_Chart
  End With
  
End

'************************************************************
'*      Gestion de l'histogramme. Routine de Yudi Astira    *
'************************************************************
Public Sub Draw_Chart()
  
  Dim i As Integer
  
  Dim skala_1 As Integer
  Dim skala_2 As Integer
  
  Dim distance_x As Float
  Dim distance_y As Float
  
  Dim width_draw As Integer
  Dim tot As Float
  Dim colors As Integer[]
  Dim bottom As Integer
  Dim sumdata As Integer
  Dim mois As String
  
  Mois = Mid$(Periode.Text, 4, 2)
  colors = New Integer[]
  colors.Resize(total + 1)
  
  For i = 1 To total
    sumdata = sumdata + value[i]
  Next
  
  If sumdata = 0 Then sumdata = 1
  
  If RadioButton1.value = True Then
    For i = 1 To total
      value[i] = value[i] / sumdata * 10
    Next
  Endif
  drwchart.Clear
  
  draw.Begin(drwchart)
  
  skala_1 = drwchart.ClientH / 11
  distance_y = drwchart.ClientH - skala_1
  bottom = distance_y + 8
  For i = 0 To 100 Step 10
    draw.ForeGround = color.black
    draw.Text(i, 0, distance_y)
    draw.Line(20, distance_y + 8, drwchart.ClientWidth, distance_y + 8)
    distance_y = distance_y - skala_1
  Next
  
  'draw.Line(30, 0, 30, drwchart.ClientH)
  Wait 0.01
  skala_2 = (drwchart.ClientW - 30) \ Total
  distance_x = skala_2 + 30
  width_draw = skala_2 / 2
  
  For i = 1 To Total
    draw.LineWidth = 1
    draw.ForeGround = color.Black
    draw.Text(Mois, distance_x - (width_draw / 2) - 4, drwchart.ClientH - 14)
    draw.Line(distance_x - (width_draw / 2), 0, distance_x - (width_draw / 2), drwchart.ClientH - skala_1 + 8)
    draw.LineWidth = width_draw
    draw.ForeGround = color.RGB(i * 100, i * 10, i * 50)
    colors[i] = draw.ForeGround
    'If RadioButton2.value = True Then
    'tot = value[i] * 2.54
    'Else
    tot = value[i] * 2.60
    'Endif
    If tot <> 0 Then draw.Line(distance_x - (width_draw / 2), bottom, distance_x - (width_draw / 2), bottom - tot)
    distance_x = distance_x + skala_2
    Mois = Val(mois) + 1
    If Val(Mois) > 12 Then Mois = "01"
    Mois = Format$(Mois, "00")
    Wait 0.01
  Next
  
  DRAW.End
  
End

Public Sub Btot_Click()
  
  Affichage()
  
End

Public Sub Bprod_Click()
  
  Affichage()
  
End

Public Sub Bmo_Click()
  
  Affichage()
  
End

Public Sub Observers(hLabel As Label)
  
  If Settings["/Soc" & Start.Societe & "/Coul_fen"] Then Utils.Observers(Me)
  
End

Public Sub Observers2(hBtn As Button)
  
  If Settings["/Soc" & Start.Societe & "/Coul_fen"] Then Utils.Observers(Me)
  
End

Public Sub Button1_Click()
  
  If Exist(filename) Then Try Kill filename
  Me.close
  
End

Public Sub RadioButton1_Click()
  
  Frame1.Visible = False
  Affichage()
  
End

Public Sub RadioButton2_Click()
  
  Frame1.Visible = True
  Affichage()
  
End
