' Gambas class file

Private ligne As String
Private choicetmp As Boolean
Private ajoutligne As Integer = 0
Private col_n As New String[26]
Private col_i As New String[26]
Private pos_n As New String[26]
Private db_n As New String[26]
Private lg_n As New String[26]
Private posorg As New String[26]

Public Sub form_Open()
  
  Me.center
  Utils.Observers(Me)
  Cdef.SetFocus
  
End

Public Sub Svs_Click()
  
  If Not IsNull(Four.Text) Then
    If Not IsNull(Fam.Text) Then
      Dialog.Title = "Choisir un fichier"
      Dialog.Path = User.home
      Dialog.Filter = ["*.csv", "Fichiers csv", "*.txt", "Fichiers texte", "*", "Tous les fichiers"]
      If Dialog.OpenFile() Then Return
      Chemin.Text = Dialog.Path
      If Not IsNull(Chemin.text) Then
        If Not IsNull(Ligne2.Text) Then Ligne2.Text = ""
        FrameTypeChamps.Enabled = True
        Lignes()
      End If
    Else
      Message.Warning("Veuillez saisir une famille SVP !")
      Fam.SetFocus
    Endif
  Else
    Message.Warning("Veuillez saisir un fournisseur SVP !")
    Four.SetFocus
  Endif
  
End

Public Sub Lignes()
  
  Dim hfil As File
  Dim Lig As String
  Dim x As Integer = 0
  
  Ligne2.Clear
  Try HFil = Open Chemin.Text For Read
  Line Input #hFil, Lig
  While x <= 4
    Line Input #hFil, Lig
    If x = 0 Then Ligne = lig
    Ligne2.Text = Ligne2.Text & Lig & "\n"
    Inc x
  Wend
Catch
  
End

'************************************************
'* On appelle la liste des fournisseurs         *
'************************************************
Public Sub TgleBtnFour_Click()
  
  Dim Rfour As Result
  
  If fourlist.visible Then
    fourlist.clear
    fourlist.visible = False
  Else
    If Not choicetmp Then fourlist.visible = True
    fourlist.clear
    ' [GB2:BCOL] Four.BackColor = &H00FF0000&
    Four.Background = &H00FF0000&
    fourlist.Columns.count = 2
    fourlist.Columns[0].Width = 65
    fourlist.Columns[1].Width = 180
    fourlist.Columns[0].Text = "code"
    fourlist.Columns[1].Text = "Intitulé"
    Rfour = Utils.db.Exec("SELECT fo_code, fo_nom FROM " & Cbase.Table("TabFour") & " ")
    If Rfour.Available Then
      Do
        fourlist.Add(Rfour!fo_code, Rfour!fo_code)
        If Not IsNull(four.text) Then
          If four.text = Rfour!fo_code Then
            fourlist.Item.Selected = True
            ' [GB2:BCOL] Four.BackColor = &H0000FF00&
            Four.Background = &H0000FF00&
          End If
        End If
        fourlist.Item[0] = Rfour!fo_code
        fourlist.Item[1] = Rfour!fo_nom
      Loop Until Rfour.MoveNext()
      fourList.SetFocus
    Endif
  Endif
  
End

'**************************************************
'* Selection d'un fournisseur a la souris         *
'**************************************************
Public Sub fourList_Click()
  
  four.text = fourList.Item[0]
  fournom.text = fourList.Item[1]
  fourList.clear
  fourList.visible = False
  ' [GB2:BCOL] Four.BackColor = &H0000FF00&
  Four.Background = &H0000FF00&
  Fam.SetFocus
  
End

'***************************************************
'* Selection d'un fournisseur manuellement         *
'***************************************************
Public Sub fourList_KeyPress()
  
  If Key.code = Key.Enter Or Key.code = Key.Return Then
    fourList_Click()
  Endif
  If Key.code = Key.Escape Or Key.code = Key.F2 Then
    fourList.visible = False
    fourList.clear
    four.SetFocus
    Stop Event
  Endif
  
End

'************************************************
'*     On appelle la liste des familles         *
'************************************************
Public Sub TgleBtnFam_Click()
  
  Dim RFam As Result
  
  If Famlist.visible Then
    Famlist.clear
    Famlist.visible = False
  Else
    If Not choicetmp Then Famlist.visible = True
    Famlist.clear
    ' [GB2:BCOL] Fam.BackColor = &H00FF0000&
    Fam.Background = &H00FF0000&
    Famlist.Columns.count = 2
    Famlist.Columns[0].Width = 65
    Famlist.Columns[1].Width = 180
    Famlist.Columns[0].Text = "code"
    Famlist.Columns[1].Text = "Intitulé"
    RFam = Utils.db.Exec("SELECT code_fam, libell_fam FROM " & Cbase.Table("TabFam") & " ")
    If RFam.Available Then
      Do
        Famlist.Add(RFam!code_fam, RFam!code_fam)
        If Not IsNull(Fam.text) Then
          If Fam.text = RFam!code_fam Then
            FamList.Item.Selected = True
            ' [GB2:BCOL] Fam.BackColor = &H0000FF00&
            Fam.Background = &H0000FF00&
          End If
        End If
        Famlist.Item[0] = RFam!code_fam
        Famlist.Item[1] = RFam!libell_fam
      Loop Until RFam.MoveNext()
      FamList.SetFocus
    Endif
  Endif
  
End

'**************************************************
'*    Selection d'une Famille a la souris         *
'**************************************************
Public Sub FamList_Click()
  
  Fam.text = FamList.Item[0]
  Famnom.text = FamList.Item[1]
  FamList.clear
  FamList.visible = False
  ' [GB2:BCOL] Fam.BackColor = &H0000FF00&
  Fam.Background = &H0000FF00&
  
End

'***************************************************
'*    Selection d'une Famille manuellement         *
'***************************************************
Public Sub FamList_KeyPress()
  
  If Key.code = Key.Enter Or Key.code = Key.Return Then
    FamList_Click()
  Endif
  If Key.code = Key.Escape Or Key.code = Key.F2 Then
    FamList.visible = False
    FamList.clear
    Fam.SetFocus
    Stop Event
  Endif
  
End
'************************************************
'*     On appelle la liste de la définition     *
'************************************************

Public Sub TgleBtnFDef_Click()
  
  Dim RDef As Result
  Dim Tab As String = "Fiches_ImpArtDef" 
  
  DefList.clear
  If DefList.visible Then
    DefList.visible = False
  Else
    DefList.visible = True
    DefList.Columns.count = 4
    DefList.Columns[0].Width = 65
    DefList.Columns[1].Width = 300
    DefList.Columns[2].Width = 120
    DefList.Columns[3].Width = 200
    DefList.Columns[0].Text = "Numéro"
    DefList.Columns[1].Text = "Libellé"
    DefList.Columns[2].Text = "Code fournisseur"
    DefList.Columns[3].Text = "Nom fournisseur"
    Try RDef = Utils.db.Exec("SELECT num, nom, cfour, nfour FROM " & Tab & " ")
    If Not Error Then
      If RDef.Available Then
        Do
          DefList.Add(RDef!num, RDef!num)
          DefList.Item[0] = RDef!num
          DefList.Item[1] = RDef!nom
          DefList.Item[2] = RDef!cfour
          DefList.Item[3] = RDef!nfour
          
        Loop Until RDef.MoveNext()
        DefList.MoveFirst
        DefList.SetFocus
        DefList.Item.Selected = True
      End If
    Else
      DefList.visible = False
    Endif
  Endif
  
End

'**************************************************
'*    Selection d'une Définition a la souris         *
'**************************************************
Public Sub DefList_Click()
  
  DefList.Columns[1].Width = 180
  Cdef.text = DefList.Item[0]
  NmDef.text = DefList.Item[1]
  'RDef = Utils.db.Exec("SELECT num FROM " & Tab & " where num = &1", Cdef.Text)
  affiche_Selection()
  DefList.clear
  Champs.MoveFirst
  Champs.Item.Selected = True
  DefList.visible = False
Catch
  DefList.clear
  DefList.visible = False
  
End

Public Sub affiche_Selection()
  
  Dim x As Integer
  Dim RDef As Result
  Dim TempCol As String
  Dim Tab As String = "Fiches_ImpArtDef" 
  Dim Tab2 As String = "Fiches_ImpArtDef2" 
  Dim Cols, dbs, lgs, sps, posorgs As String
  
  RDef = Utils.db.Exec("SELECT * FROM " & Tab & " d INNER JOIN " & tab2 & " n on n.num = d.num where n.num = &1", Cdef.Text)
  If Not Rdef.Available Then RDef = Utils.db.Exec("SELECT * FROM " & Tab & " where num = &1", Cdef.Text)
  If RDef.Available Then
    If RDef!typesep = "S" Then
      Sep.Value = True
      Cbox.Text = RDef!sep
    Else
      Cfix.Value = True
    Endif
    Fam.text = RDef!cfam
    Famnom.text = RDef!nfam
    four.text = RDef!cfour
    fournom.text = RDef!nfour
    Chemin.Text = RDef!adrfic
    FrameTypeChamps.Enabled = True
    Lignes()
    choicetmp = True
    TgleBtnFour_Click()
    TgleBtnFam_Click()
    choicetmp = False
    Champs.Clear
    For x = 1 To 25
      cols = "col_" & x
      dbs = "db_" & x
      lgs = "lg_" & x
      sps = "pos_" & x
      posorgs = "posorg_" & x
      If Not IsNull(RDef[cols]) Then
        Champs.Add(x, x)
        Champs.Item[0] = Format$(x, "00")
        Champs.Item[1] = RDef[cols]
        If Cfix.value = True Then
          Champs.Item[2] = RDef[dbs]
          Champs.Item[3] = RDef[lgs]
          Champs.Item[4] = RDef[posorgs]
        Else
          Champs.Item[2] = RDef[sps]
          Champs.Item[3] = RDef[posorgs]
        Endif
      Else
        Break
      Endif
    Next
  Endif
Catch
  
End

'***************************************************
'*    Selection d'une Définition manuellement         *
'***************************************************
Public Sub DefList_KeyPress()
  
  If Key.code = Key.Enter Or Key.code = Key.Return Then
    DefList_Click()
  Endif
  If Key.code = Key.Escape Or Key.code = Key.F2 Then
    DefList.visible = False
    DefList.clear
    Cdef.SetFocus
    Stop Event
  Endif
  
End

'***************************************************
'*      Gestion des validations des champs         *
'***************************************************

Public Sub Cmpt_keypress()
  
  Dim rResult As Result
  Dim Tab As String = "Fiches_ImpArtDef" 
  
  Select Case Last.tag
      
    Case 1
      If Key.code = Key.enter Or Key.code = Key.Return Or Key.code = Key.Tab Then
        rResult = Utils.db.Exec("SELECT * FROM " & Tab & " where num = &1 ", Cdef.Text)
        If rResult.Available Then
          NmDef.text = rResult!nfam & " " & rResult!nfour
          Fam.text = rResult!cfam
          Famnom.text = rResult!nfam
          four.text = rResult!cfour
          fournom.text = rResult!nfour
          Chemin.SetFocus
        Else
          Message.Error("Cette définition n'existe pas !")
          Cdef.SetFocus
          Cdef.Select
        Endif
      Endif
      If Key.Code = key.F2 Then
        TgleBtnFDef_Click()
        DefList.SetFocus
      Endif
    Case 3
      If Key.code = Key.enter Or Key.code = Key.Return Or Key.code = Key.Tab Then
        rResult = Utils.db.Exec("SELECT fo_code, fo_nom FROM " & Cbase.Table("TabFour") & " where fo_code = &1", Four.Text)
        If rResult.Available Then
          fournom.text = rResult!fo_nom
          Fam.SetFocus
        Else
          Message.Error("Ce fournisseur n'existe pas !")
          Four.SetFocus
          Four.Select
        Endif
      Endif
      
    Case 4
      If Key.code = Key.enter Or Key.code = Key.Return Or Key.code = Key.Tab Then
        rResult = Utils.db.Exec("SELECT code_fam, libell_fam FROM " & Cbase.Table("TabFam") & " where code_fam = &1", Fam.Text)
        If rResult.Available Then
          Famnom.text = rResult!libell_fam
          Chemin.SetFocus
        Else
          Message.Error("Cette famille n'existe pas !")
          Fam.SetFocus
          Fam.Select
        Endif
      Endif
      
  End Select
  
End

Public Sub Cmpt_Gotfocus()
  
  Select Case Last.tag
      
    Case 1
      Try Utils.ObsGotf(Cdef)
      
    Case 2
      Try Utils.ObsGotf(Nmdef)
      
    Case 3
      Try Utils.ObsGotf(Four)
      
    Case 4
      Try Utils.ObsGotf(Fam)
      
    Case 5
      Try Utils.ObsGotf(Chemin)
  End Select
  
End

Public Sub Cmpt_Lostfocus()
  
  Select Case Last.tag
      
    Case 1
      Try Utils.ObsLstf(Cdef)
      
    Case 2
      Try Utils.ObsLstf(Nmdef)
      
    Case 3
      Try Utils.ObsLstf(Four)
      
    Case 4
      Try Utils.ObsLstf(Fam)
      
    Case 5
      Try Utils.ObsLstf(Chemin)
  End Select
  
End

Public Sub Cmpt2_keypress()
  
  Select Case Last.tag
    Case 1
      If Key.code = Key.enter Or Key.code = Key.Return Or Key.code = Key.Tab Then debut.SetFocus
      
    Case 2
      If Key.code = Key.enter Or Key.code = Key.Return Or Key.code = Key.Tab Then Longueur.SetFocus
      
    Case 3
      If Key.code = Key.enter Or Key.code = Key.Return Or Key.code = Key.Tab Then BtnEnregistreZone.SetFocus
      
  End Select
  
End

Public Sub Cmpt2_Gotfocus()
  
  Select Case Last.tag
      
    Case 1
      Try Utils.ObsGotf(debut)
      
    Case 2
      Try Utils.ObsGotf(longueur)
      
  End Select
  
End

Public Sub Cmpt2_Lostfocus()
  
  Select Case Last.tag
      
    Case 2
      Try Utils.ObsLstf(debut)
      
    Case 3
      Try Utils.ObsLstf(longueur)
      Try TextLabel2.Text = Mid$(Ligne, Val(Debut.Text), Val(Longueur.Text))
      
  End Select
  
End

Public Sub Pfic_Change()
  
  Dim iPos As Integer
  Dim x As Integer = 0
  Dim sKey As String
  Dim Lg As String = Ligne
  
  For x = 1 To Val(Pfic.Text)
    iPos = InStr(Lg, Cbox.text)
    If iPos <> 0 Then
      sKey = Left$(Lg, iPos - 1)
    Else
      skey = Lg
    Endif
    Lg = Mid$(Lg, iPos + 1)
  Next
  If IsNull(skey) Then
    skey = "Champs vide N°" & Pfic.Text
  End If
  TextLabel2.text = skey
  
End

Public Sub TabOnglet_Click()
  
  If TabOnglet.index = 1 Then
    If IsNull(Ligne2.text) Then
      Message.Error("Veuillez saisir un fichier tarif SVP !")
      TabOnglet.index = 0
    Else
      BtnEnregistre_Click()
      CBoxZone.SetFocus
    Endif
  Endif
  
End

Public Sub BtnQuitter_Click()
  
  Me.Close
  
End

Public Sub BtnEffacerList_Click()
  
  Dim tab As String = "Fiches_ImpArtDef2" 
  
  Utils.db.Exec("DELETE FROM " & Tab & "  WHERE num = &1", Cdef.Text)
  Champs.Clear
  
End

Public Sub Sep_Click()
  
  If Sep.Value = True Then
    Panel2.visible = True
    Cfix.value = False
    Hbox2.visible = False
    Hbox1.visible = True
  Else
    Panel2.Visible = False
    Cfix.value = True
    Hbox2.visible = True
    Hbox1.visible = False
  Endif
  Champs.clear
  DefColonnes()
  
End

Public Sub Cfix_Click()
  
  If Cfix.Value = True Then
    Panel2.visible = False
    Sep.value = False
    Hbox2.visible = True
    Hbox1.visible = False
  Else
    Panel2.Visible = True
    Sep.value = True
    Hbox2.visible = False
    Hbox1.visible = True
  Endif
  Champs.clear
  DefColonnes()
  
End

Public Sub DefColonnes()
  
  If Sep.value = True Then
    Champs.Columns.count = 4
    Champs.Columns[0].Width = 60
    Champs.Columns[0].Text = "Ordre"
    Champs.Columns[1].Width = 450
    Champs.Columns[1].Text = "Nom"
    Champs.Columns[2].Width = 160
    Champs.Columns[2].Text = "Position"
    Champs.Columns[3].Width = 80
    Champs.Columns[3].Text = "  N°"
  Else
    Champs.Columns.count = 4
    Champs.Columns[0].Width = 80
    Champs.Columns[0].Text = "Ordre"
    Champs.Columns[1].Width = 500
    Champs.Columns[1].Text = "Nom"
    Champs.Columns[2].Width = 80
    Champs.Columns[2].Text = "Début"
    Champs.Columns[3].Width = 80
    Champs.Columns[3].Text = "Longueur"
  Endif
  
End

Public Sub BtnEnregistreZone_KeyPress()
  
  If Key.code = Key.enter Or Key.code = Key.Return Then BtnEnregistreZone_Click()
  
End

Public Sub BtnEnregistreZone_Click()
  
  Dim tab As String = "Fiches_ImpArtDef2" 
  
  ajoutligne = Champs.Count + 1
  Champs.Add(ajoutligne, ajoutligne)
  Champs.Item[0] = Format$(Champs.Count, "00")
  Champs.Item[1] = CBoxZone.Text
  If Cfix.value = True Then
    Champs.Item[2] = Debut.Text
    Champs.Item[3] = Longueur.Text
    Champs.Item[4] = Val(Left$(CBoxZone.text, 2))
  Else
    Champs.Item[2] = Pfic.Text
    Champs.Item[3] = Val(Left$(CBoxZone.text, 2))
  Endif
  
  Utils.db.Exec("DELETE FROM " & Tab & "  WHERE num = &1", Cdef.Text)
  EnregistreZones()
  Champs.Clear
  Affiche_Selection()
  CBoxZone.SetFocus()
Catch
  'Message.Error("Ce champs a déjà été saisi !")
  
End

Public Sub BtnEnregistre_Click()
  
  Dim RDef As Result
  Dim nextnum As Integer
  Dim i As Integer
  Dim Tab As String = "Fiches_ImpArtDef" 
  Dim tmpString As String
  Dim Type As String
  
  If Sep.value = True Then
    Type = "S"
  Else
    Type = "F"
  Endif
  If IsNull(Four.Text) Or If IsNull(Fam.Text) Then
    Message.Warning("La saisie d'un fournisseur et d'une famille est obligatoire!")
  Else
    RDef = Utils.db.Exec("SELECT num FROM " & Tab & " where num = &1", Cdef.Text)
    If RDef.Available Then
      Utils.db.Exec("Update " & Tab & " set cfour= &2, nfour= &3, cfam = &4, nfam = &5, adrfic = &6, typesep = &7, sep = &8, nom = &9 where num = &1", Cdef.Text, Four.Text, Fournom.Text, Fam.Text, Famnom.Text, Chemin.Text, Type, Cbox.Text, NmDef.Text)
    Else
      Utils.db.Exec("insert into " & Tab & " (num, cfour, nfour, cfam, nfam, adrfic, typesep, sep, nom) values (&1,&2,&3,&4,&5,&6,&7,&8,&9)", Cdef.Text, Four.Text, Fournom.Text, Fam.Text, Famnom.Text, Chemin.Text, Type, Cbox.Text, NmDef.Text)
    Endif
  Endif
  
End

Public Sub EnregistreZones()
  
  Dim RDef As Result
  Dim nextnum As Integer
  Dim i As Integer = 0
  Dim Tab As String = "Fiches_ImpArtDef2" 
  Dim tmpString As String
  
  If Champs.count > 0 Then
    Champs.MoveFirst()
    Repeat
      Champs.item.Selected = True
      Inc i
      If IsNull(Champs.current[1]) Then Break
      col_i[i] = Champs.current[1]
      If sep.Value = True Then
        pos_n[i] = Champs.current[2]
        posorg[i] = Champs.current[3]
      Else
        db_n[i] = Champs.current[2]
        lg_n[i] = Champs.current[3]
        posorg[i] = Champs.current[4]
      Endif
    Until Champs.MoveNext()
    If sep.value = False Then
      RDef = Utils.db.Exec("SELECT num FROM " & Tab & " where num = &1", Cdef.Text)
      If RDef.Available Then
        Utils.db.Exec("Update " & Tab & " set num = &1, col_1 = &2, db_1 = &3, lg_1 = &4, col_2 = &5, db_2 = &6, lg_2 = &7, col_3 = &8, db_3 = &9, lg_3 = &{10}, col_4 = &{11}, db_4 = &{12}, lg_4 = &{13}, col_5 = &{14}, db_5 = &{15}, lg_5 = &{16}, col_6 = &{17}, db_6 = &{18}, lg_6 = &{19}, col_7 = &{20}, db_7 = &{21}, lg_7 = &{22} where num = &1", Cdef.Text, col_i[1], db_n[1], lg_n[1], col_i[2], db_n[2], lg_n[2], col_i[3], db_n[3], lg_n[3], col_i[4], db_n[4], lg_n[4], col_i[5], db_n[5], lg_n[5], col_i[6], db_n[6], lg_n[6], col_i[7], db_n[7], lg_n[7])
        Utils.db.Exec("Update " & Tab & " set col_8 = &2, db_8 = &3, lg_8 = &4, col_9 = &5, db_9 = &6, lg_9 = &7, col_10 = &8, db_10 = &9, lg_10 = &{10}, col_11 = &{11}, db_11 = &{12}, lg_11 = &{13}, col_12 = &{14}, db_12 = &{15}, lg_12 = &{16}, col_13 = &{17}, db_13 = &{18}, lg_13 = &{19}, col_14 = &{20}, db_14 = &{21}, lg_14 = &{22}, col_15 = &{23}, db_15 = &{24}, lg_15 = &{25}, col_16 = &{26}, db_16 = &{27}, lg_16 = &{28}, col_17 = &{29}, db_17 = &{30}, lg_17 = &{31}, col_18 = &{32}, db_18 = &{33}, lg_18 = &{34}, col_19 = &{35}, db_19 = &{36}, lg_19 = &{37}, col_20 = &{38}, db_20 = &{39}, lg_20 = &{40}, col_21 = &{41}, db_21 = &{42}, lg_21 = &{43}, col_22 = &{44}, db_22 = &{45}, lg_22 = &{46}, col_23 = &{47}, db_23 = &{48}, lg_23 = &{49}, col_24 = &{50}, db_24 = &{51}, lg_24 = &{52}, col_25 = &{53}, db_25 = &{54}, lg_25 = &{55} where num = &1", Cdef.Text, col_i[8], db_n[8], lg_n[8], col_i[9], db_n[9], lg_n[9], col_i[10], db_n[10], lg_n[10], col_i[11], db_n[11], lg_n[11], col_i[12], db_n[12], lg_n[12], col_i[13], db_n[13], lg_n[13], col_i[14], db_n[14], lg_n[14], col_i[15], db_n[15], lg_n[15], col_i[16], db_n[16], lg_n[16], col_i[17], db_n[17], lg_n[17], col_i[18], db_n[18], lg_n[18], col_i[19], db_n[19], lg_n[19], col_i[20], db_n[20], lg_n[20], col_i[22], db_n[22], lg_n[22], col_i[23], db_n[23], lg_n[23], col_i[24], db_n[24], lg_n[24], col_i[25], db_n[25], lg_n[25])
        Utils.db.Exec("Update " & Tab & " set posorg_1 = &1, posorg_2 = &2, posorg_3 = &3, posorg_4 = &4, posorg_5 = &5, posorg_6 = &6, posorg_7 = &7, posorg_8 = &8, posorg_9 = &9, posorg_10 = &{10}, posorg_11 = &{11}, posorg_12 = &{12}, posorg_13 = &{13}, posorg_14 = &{14}, posorg_15 = &{15}, posorg_16 = &{16}, posorg_17 = &{17}, posorg_18 = &{18} where num = &{19}", posorg[1], posorg[2], posorg[3], posorg[4], posorg[5], posorg[6], posorg[7], posorg[8], posorg[9], posorg[10], posorg[11], posorg[12], posorg[13], posorg[14], posorg[15], posorg[16], posorg[17], posorg[18], Cdef.Text)
        Utils.db.Exec("Update " & Tab & " set posorg_19 = &1, posorg_20 = &2, posorg_21 = &3, posorg_22 = &4, posorg_23 = &5, posorg_24 = &6, posorg_25 = &7 where num = &{8}", posorg[19], posorg[20], posorg[21], posorg[22], posorg[23], posorg[24], posorg[25], Cdef.Text)
      Else
        Utils.db.Exec("insert into " & Tab & " (num, col_1, db_1, lg_1, col_2, db_2, lg_2, col_3, db_3, lg_3, col_4, db_4, lg_4, col_5, db_5, lg_5, col_6, db_6, lg_6, col_7, db_7, lg_7, col_8, db_8, lg_8, col_9, db_9, lg_9, col_10, db_10, lg_10, col_11, db_11, lg_11, col_12, db_12, lg_12, col_13, db_13, lg_13, col_14, db_14, lg_14, col_15, db_15, lg_15) values (&1,&2,&3,&4,&5,&6,&7,&8,&9,&{10},&{11},&{12},&{13},&{14},&{15},&{16},&{17},&{18},&{19},&{20},&{21},&{22},&{23},&{24},&{25},&{26},&{27},&{28},&{29},&{30},&{31},&{32},&{33},&{34},&{35},&{36},&{37},&{38},&{39},&{40},&{41},&{42},&{43},&{44},&{45},&{46})", Cdef.Text, col_i[1], db_n[1], lg_n[1], col_i[2], db_n[2], lg_n[2], col_i[3], db_n[3], lg_n[3], col_i[4], db_n[4], lg_n[4], col_i[5], db_n[5], lg_n[5], col_i[6], db_n[6], lg_n[6], col_i[7], db_n[7], lg_n[7], col_i[8], db_n[8], lg_n[8], col_i[9], db_n[9], lg_n[9], col_i[10], db_n[10], lg_n[10], col_i[11], db_n[11], lg_n[11], col_i[12], db_n[12], lg_n[12], col_i[13], db_n[13], lg_n[13], col_i[14], db_n[14], lg_n[14], col_i[15], db_n[15], lg_n[15], col_i[16], db_n[16], lg_n[16], col_i[17], db_n[17], lg_n[17], col_i[18], db_n[18], lg_n[18])
      Endif
    Else
      RDef = Utils.db.Exec("SELECT num FROM " & Tab & " where num = &1", Cdef.Text)
      If RDef.Available Then
        Utils.db.Exec("Update " & Tab & " set col_1 = &2, pos_1 = &3, col_2 = &4, pos_2 = &5, col_3 = &6, pos_3 = &7, col_4 = &8, pos_4 = &9, col_5 = &{10}, pos_5 = &{11}, col_6 = &{12}, pos_6 = &{13}, col_7 = &{14}, pos_7 = &{15} where num = &1", Cdef.Text, col_i[1], pos_n[1], col_i[2], pos_n[2], col_i[3], pos_n[3], col_i[4], pos_n[4], col_i[5], pos_n[5], col_i[6], pos_n[6], col_i[7], pos_n[7])
        Utils.db.Exec("Update " & Tab & " set col_8 = &2, pos_8 = &3, col_9 = &4, pos_9 = &5, col_10 = &6, pos_10 = &7, col_11 = &8, pos_11 = &9, col_12 = &{10}, pos_12 = &{11}, col_13 = &{12}, pos_13 = &{13}, col_14 = &{14}, pos_14 = &{15}, col_15 = &{16}, pos_15 = &{17}, col_16 = &{18}, pos_16 = &{19}, col_17 = &{20}, pos_17 = &{21}, col_18 = &{22}, pos_18 = &{23}, col_19 = &{24}, pos_19 = &{25}, col_20 = &{26}, pos_20 = &{27}, col_21 = &{28}, pos_21 = &{29}, col_22 = &{30}, pos_22 = &{31}, col_23 = &{32}, pos_23 = &{33}, col_24 = &{34}, pos_24 = &{35}, col_25 = &{36}, pos_25 = &{37} where num = &1", Cdef.Text, col_i[8], pos_n[8], col_i[9], pos_n[9], col_i[10], pos_n[10], col_i[11], pos_n[11], col_i[12], pos_n[12], col_i[13], pos_n[13], col_i[14], pos_n[14], col_i[15], pos_n[15], col_i[16], pos_n[16], col_i[17], pos_n[17], col_i[18], pos_n[18], col_i[19], pos_n[19], col_i[20], pos_n[20], col_i[21], pos_n[21], col_i[22], pos_n[22], col_i[23], pos_n[23], col_i[24], pos_n[24], col_i[25], pos_n[25])
        Utils.db.Exec("Update " & Tab & " set posorg_1 = &1, posorg_2 = &2, posorg_3 = &3, posorg_4 = &4, posorg_5 = &5, posorg_6 = &6, posorg_7 = &7, posorg_8 = &8, posorg_9 = &9, posorg_10 = &{10}, posorg_11 = &{11}, posorg_12 = &{12}, posorg_13 = &{13}, posorg_14 = &{14}, posorg_15 = &{15}, posorg_16 = &{16}, posorg_17 = &{17}, posorg_18 = &{18}, posorg_19 = &{19}, posorg_20 = &{20}, posorg_21 = &{21}, posorg_22 = &{22}, posorg_23 = &{23}, posorg_24 = &{24}, posorg_25 = &{25} where num = &{26}", posorg[1], posorg[2], posorg[3], posorg[4], posorg[5], posorg[6], posorg[7], posorg[8], posorg[9], posorg[10], posorg[11], posorg[12], posorg[13], posorg[14], posorg[15], posorg[16], posorg[17], posorg[18], posorg[19], posorg[20], posorg[21], posorg[22], posorg[23], posorg[24], posorg[25], Cdef.Text)
      Else
        Utils.db.Exec("insert into " & Tab & " (num, col_1, pos_1, col_2, pos_2, col_3, pos_3, col_4, pos_4, col_5, pos_5, col_6, pos_6, col_7, pos_7, col_8, pos_8, col_9, pos_9, col_10, pos_10, col_11, pos_11, col_12, pos_12, col_13, pos_13, col_14, pos_14, col_15, pos_15, col_16, pos_16, col_17, pos_17, col_18, pos_18, col_19, pos_19, col_20, pos_20, col_21, pos_21, col_22, pos_22, col_23, pos_23, col_24, pos_24, col_25, pos_25) values (&1,&2,&3,&4,&5,&6,&7,&8,&9,&{10},&{11},&{12},&{13},&{14},&{15},&{16},&{17},&{18},&{19},&{20},&{21},&{22},&{23},&{24},&{25},&{26},&{27},&{28},&{29},&{30},&{31},&{32}, &{33},&{34},&{35},&{36},&{37},&{38},&{39},&{40},&{41},&{42},&{43},&{44},&{45},&{46},&{47},&{48},&{49},&{50},&{51})", Cdef.Text, col_i[1], pos_n[1], col_i[2], pos_n[2], col_i[3], pos_n[3], col_i[4], pos_n[4], col_i[5], pos_n[5], col_i[6], pos_n[6], col_i[7], pos_n[7], col_i[8], pos_n[8], col_i[9], pos_n[9], col_i[10], pos_n[10], col_i[11], pos_n[11], col_i[12], pos_n[12], col_i[13], pos_n[13], col_i[14], pos_n[14], col_i[15], pos_n[15], col_i[16], pos_n[16], col_i[17], pos_n[17], col_i[18], pos_n[18], col_i[19], pos_n[19], col_i[20], pos_n[20], col_i[21], pos_n[21], col_i[22], pos_n[22], col_i[23], pos_n[23], col_i[24], pos_n[24], col_i[25], pos_n[25])
        Utils.db.Exec("Update " & Tab & " set posorg_1 = &1, posorg_2 = &2, posorg_3 = &3, posorg_4 = &4, posorg_5 = &5, posorg_6 = &6, posorg_7 = &7, posorg_8 = &8, posorg_9 = &9, posorg_10 = &{10}, posorg_11 = &{11}, posorg_12 = &{12}, posorg_13 = &{13}, posorg_14 = &{14}, posorg_15 = &{15}, posorg_16 = &{16}, posorg_17 = &{17}, posorg_18 = &{18}, posorg_19 = &{19}, posorg_20 = &{20}, posorg_21 = &{21}, posorg_22 = &{22}, posorg_23 = &{23}, posorg_24 = &{24}, posorg_25 = &{25} where num = &{26}", posorg[1], posorg[2], posorg[3], posorg[4], posorg[5], posorg[6], posorg[7], posorg[8], posorg[9], posorg[10], posorg[11], posorg[12], posorg[13], posorg[14], posorg[15], posorg[16], posorg[17], posorg[18], posorg[19], posorg[20], posorg[21], posorg[22], posorg[23], posorg[24], posorg[25], Cdef.Text)
      Endif
    Endif
  Endif
  For i = 1 To 25
    col_i[i] = ""
    pos_n[i] = ""
    posorg[i] = ""
    db_n[i] = ""
    lg_n[i] = ""
    posorg[i] = ""
  Next
  
End

Public Sub BtnRetirerZone_Click()
  
  Dim RDef As Result
  Dim Tab As String = "Fiches_ImpArtDef2" 
  
  RDef = Utils.db.Exec("SELECT num FROM " & Tab & " where num = &1", Cdef.Text)
  Try Champs.Current.Delete
  If Not Error Then
    Utils.db.Exec("DELETE FROM " & Tab & "  WHERE num = &1", Cdef.Text)
    Renumerotation()
    EnregistreZones()
    Affiche_Selection()
  Endif
  
End

Public Sub Champs_Activate()
  
  CBoxZone.text = Champs.Item[1]
  If Sep.value Then
    Pfic.Text = Champs.Item[2]
  Else
    Debut.text = Champs.Item[2]
    Longueur.Text = Champs.item[3]
  Endif
  BtnRetirerZone_Click()
  affiche_Selection()
  
End

Public Sub Renumerotation()
  
  Dim i As Integer = 1
  
  If Champs.count > 0 Then
    Champs.MoveFirst()
    Champs.item.Selected = True
    Repeat
      Champs.Item[0] = Format$(i, "00")
      Inc i
      Champs.item.Selected = True
    Until Champs.MoveNext()
  Endif
  
End

Public Sub Champs_KeyPress()
  
  Dim col As String
  Dim pos As String
  Dim debt As String
  Dim Lg As String
  Dim col2 As String
  Dim pos2 As String
  Dim debt2 As String
  Dim Lg2 As String
  Dim skey As String
  Dim ikey As Integer
  
  Champs.current.Selected = True
  If key.Code = key.Delete Then BtnRetirerZone_Click()
  If key.code = 45 Then
    Col = Champs.current[1]
    skey = Champs.current[1]
    If sep.value = True Then
      pos = Champs.current[2]
      Lg = Champs.current[3]
    Else
      debt = Champs.current[2]
      Lg = Champs.current[3]
    Endif
    Champs.MoveFirst()
    Champs.item.Selected = True
    For ikey = 1 To Champs.Count 
      If Champs.current[1] <> skey Then
        Champs.MoveNext()
        Champs.item.Selected = True
      Else
        Champs.item.Selected = True
        Break
      Endif
    Next
    Champs.MovePrevious()
    Try Champs.item.Selected = True
    If Not Error Then
      Col2 = Champs.current[1]
      If sep.value = True Then
        pos2 = Champs.current[2]
        Lg2 = Champs.current[3]
      Else
        debt2 = Champs.current[2]
        Lg2 = Champs.current[3]
      Endif
      Champs.current[1] = Col
      If sep.value = True Then
        Champs.current[2] = pos
        Champs.current[3] = Lg
      Else
        Champs.current[2] = debt
        Champs.current[3] = Lg
      Endif
      Champs.Movenext()
      Champs.item.Selected = True
      Champs.current[1] = Col2
      If sep.value = True Then
        Champs.current[2] = pos2
        Champs.current[3] = Lg2
      Else
        Champs.current[2] = debt2
        Champs.current[3] = Lg2
      Endif
    Endif
    EnregistreZones()
    affiche_Selection()
    Champs.MoveFirst()
    Champs.item.Selected = True
    For ikey = 1 To Champs.Count 
      If Champs.current[1] <> skey Then
        Champs.MoveNext()
        Try Champs.item.Selected = True
      Else
        Break
      Endif
    Next
    Champs.Current.EnsureVisible
    Champs.SetFocus
  Endif
  If key.code = 43 Then
    Col = Champs.current[1]
    skey = Champs.current[1]
    If sep.value = True Then
      pos = Champs.current[2]
      Lg = Champs.current[3]
    Else
      debt = Champs.current[2]
      Lg = Champs.current[3]
    Endif
    Champs.MoveFirst()
    Champs.item.Selected = True
    For ikey = 1 To Champs.Count 
      If Champs.current[1] <> skey Then
        Champs.MoveNext()
        Champs.item.Selected = True
      Else
        Break
      Endif
    Next
    Champs.MoveNext()
    Try Champs.Item.Selected = True
    If Not Error Then
      Col2 = Champs.current[1]
      If sep.value = True Then
        pos2 = Champs.current[2]
        Lg2 = Champs.current[3]
      Else
        debt2 = Champs.current[2]
        Lg2 = Champs.current[3]
      Endif
      Champs.current[1] = Col
      If sep.value = True Then
        Champs.current[2] = pos
        Champs.current[3] = Lg
      Else
        Champs.current[2] = debt
        Champs.current[3] = Lg
      Endif
    Endif
    Champs.MovePrevious()
    Try Champs.Item.Selected = True
    If Not Error Then
      Champs.current[1] = Col2
      If sep.value = True Then
        Champs.current[2] = pos2
        Champs.current[3] = Lg2
      Else
        Champs.current[2] = debt2
        Champs.current[3] = Lg2
      Endif
    Endif
    EnregistreZones()
    affiche_Selection()
    Champs.MoveFirst()
    Champs.item.Selected = True
    For ikey = 1 To Champs.Count 
      If Champs.current[1] <> skey Then
        Champs.MoveNext()
        Champs.item.Selected = True
      Else
        Break
      Endif
    Next
    Champs.Current.EnsureVisible
    Champs.SetFocus
  Endif
  
End

Public Sub Btncreer_Click()
  
  Dim Rdef As Result
  Dim Tab As String = "Fiches_ImpArtDef" 
  
  Efface_Zone()
  RDef = Utils.db.Exec("SELECT num FROM " & Tab & "")
  If RDef.Available Then
    RDef.MoveLast()
    Cdef.Text = RDef!num + 1
  Else
    Cdef.text = "1"
  Endif
  Sep.value = True
  NmDef.SetFocus
  
End

Public Sub BtnSupprime_Click()
  
  Dim RDef As Result
  Dim Tab As String = "Fiches_ImpArtDef2" 
  
  If Message.Question("Attention ! Etes-vous sur de vouloir supprimer cette définition ?", "Oui", "Non") = 1 Then
    RDef = Utils.db.Exec("SELECT num FROM " & Tab & " where num = &1", Cdef.Text)
    If RDef.Available Then Utils.db.Exec("DELETE FROM " & Tab & "  WHERE num = &1", Cdef.Text)
    Tab = "Fiches_ImpArtDef" 
    RDef = Utils.db.Exec("SELECT num FROM " & Tab & " where num = &1", Cdef.Text)
    If RDef.Available Then Utils.db.Exec("DELETE FROM " & Tab & "  WHERE num = &1", Cdef.Text)
    Efface_Zone()
  Endif
  
End

Public Sub Efface_Zone()
  
  Champs.Clear
  Cdef.Clear
  NmDef.Clear
  Four.Clear
  Fournom.Clear
  Fam.Clear
  Famnom.Clear
  Chemin.Clear
  Ligne2.Clear
  
End

Public Sub Cmpt2_Click()
  
  Select Case Last.tag
      
    Case 1
      If sep.value Then
        Pfic.SetFocus
      Else
        Debut.SetFocus
      Endif
  End Select
  
End

Public Sub BtnHelp_Click()
  
  Exec ["xdg-open", Application.Path &/ "Ecrans/Majtarif.html"]
  
End
