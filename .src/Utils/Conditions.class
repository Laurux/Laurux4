' Gambas class file
'################################################
'# nom du fichier           : Conditions.class
'# Auteur                   : Fabien Bodard
'################################################
Public Const IsEqual As Integer = 1
Public Const IsDifferent As Integer = 2
Public Const IsInferior As Integer = 3
Public Const IsInferiorOrEqual As Integer = 4
Public Const IsSuperior As Integer = 5
Public Const IsSuperiorOrEqual As Integer = 6
Public Const {Like} As Integer = 7

Public Const EstEgale As Integer = 1
Public Const EstDifferent As Integer = 2
Public Const EstInferieur As Integer = 3
Public Const EstInferieurOuEgale As Integer = 4
Public Const EstSuperieur As Integer = 5
Public Const EstSuperieurOuEgale As Integer = 6
Public Const Ressemble As Integer = 7

Private $vIfTrue As Variant
Private $vIfFalse As Variant
Private $vValue As Variant

Private aConditions As New Object[]

Property IfTrue As Variant
Property IfFalse As Variant
Property Read Value As Variant


Public Sub _New(sField As String, CompareMode As Integer, Value As Variant, Optional vIfTrue As Variant, Optional vIfFalse As Variant)

  Add(sField, CompareMode, Value)
  $vIfTrue = vIfTrue
  $vIfFalse = vIfFalse

End

Public Sub Add(sField As String, CompareMode As Integer, Value As Variant)
  
  Dim oCondition As New Condition
  
  'oCondition.Table = sTable
  oCondition.Field = sField
  oCondition.CompareMode = CompareMode
  oCondition.Value = Value
  aConditions.Add(oCondition)
  
End

Public Sub Clear()
  
  aConditions.Clear
  
End


Public Sub Compute(hResult As Result) As Boolean
  Dim hCondition As Condition
  Dim sRet As Boolean = True
  Dim sb As Boolean
  If aConditions.Count = 0 Then Return False
  For Each hCondition In aConditions
  
    If hCondition.CompareMode = isEqual Then
      sb = hResult[hCondition.Field] = hCondition.Value
    Else If hCondition.CompareMode = isDifferent Then
      sb = hResult[hCondition.Field] <> hCondition.Value
    Else If hCondition.CompareMode = isInferior Then
      sb = hResult[hCondition.Field] < hCondition.Value
    Else If hCondition.CompareMode = IsInferiorOrEqual Then
      sb = hResult[hCondition.Field] <= hCondition.Value
    Else If hCondition.CompareMode = isSuperior Then
      sb = hResult[hCondition.Field] > hCondition.Value
    Else If hCondition.CompareMode = isSuperiorOrEqual Then
      sb = hResult[hCondition.Field] >= hCondition.Value
    Else If hCondition.CompareMode = {Like} Then
      sb = hResult[hCondition.Field] Like hCondition.Value
    Endif
    sRet = sRet And sb
  Next
  
  $vValue = IIf(sRet, $vIfTrue, $vIfFalse)
  Return sRet
Catch
  Return False

End


Private Function IfTrue_Read() As Variant

  Return $vIfTrue

End

Private Sub IfTrue_Write(Value As Variant)

  $vIfTrue = Value

End

Private Function IfFalse_Read() As Variant

  Return $vIfFalse

End

Private Sub IfFalse_Write(Value As Variant)

  $vIfFalse = Value

End

Private Function Value_Read() As Variant

  Return $vValue

End

