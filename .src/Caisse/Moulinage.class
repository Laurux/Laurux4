' Gambas class file

Private Jnl As String
Private numr As Integer ' Numero ecriture provisoire
Private numr2 As Integer ' numero ecriture définitif
Private numecr As String
Private client As String
Private Nclient As String
Private collectif As String
Private typec As String
Private Artdsg As String
Private Artdsg2 As String
Private Artfam As String
Private Nbd As String
Private Nbdec As String
Private Paht As String
Private Pmp As String
Private Artpu As String
Private Artbrut As String
Private Artnet As String
Private Arttc As String
Private Artrm As String ' remise client sur pieces ou par type client
Private RemType As String
Private Rms As New String[6, 3] ' Tableau des remises quantitatives
Private Qte As String
Private Decq As String '
Private Ttva As Float
Private Tx As Float
Private Arttx As String
Private Arr As String
Private Decm As String
Private Ecot As String
Private Tcp As String
Private marge As String
Private Datem As String
Private CptCaisse As String
Private Vic As String
Private Vichq As String
Private Viautre As String
Private jnal As String
Private Tab As String = "Virements"

Public Sub _new()
  
  Parametres()
  Ventilation()
  
End

Public Sub Button2_Click()
  
  Me.close
  
End

'**********************************************On effectue le moulinage des tickets**************************************
Public Sub Button1_Click()
  
  Dim rResult As Result
  Dim chemin As String = "/Sauve"
  Dim cs As String = Settings["/Soc"]
  
  If Jnal = "" Or If Vic = "" Or If Vichq = "" Or If Viautre = "" Then
    Music.play
    Message.Error("Vous devez completer, dans les parametres, les données relatives au journal de caisse \net aux comptes de virements internes avant de faire le moulinage !")
  Else
    Music.play
    If Message.Question("Ce programme va effacer les bordereaux de remises de chèques et de cartes !\nEtes-vous d'accord pour lancer le moulinage ?", "Oui", "Non") = 1 Then
      rResult = Utils.db.Exec("SELECT * FROM " & Cbase.Table("TabCaisses") & " where connecte = &1", 1)
      If rResult.Available Then
        Music.play
        Message.Error("La caisse numéro " & rResult!code & " est connectée ! \n Veuillez déconnecter toutes vos caisses avant de faire le moulinage SVP.")
        Return
      Else
        rResult = Utils.db.Exec("SELECT * FROM " & Cbase.Table("TabCaisses") & " where tkz = &1", 0)
        If rResult.Available Then
          Music.play
          Message.Error("Le ticket Z de la caisse numéro " & rResult!code & " n'est pas tiré ! \n Veuillez imprimer vos bandes Z avant de faire le moulinage SVP.")
          Return
        Else
          Music.play
          If Message.Question("Cette opération va effectuer le passage en comptabilité pour l'ensemble des tickets de caisse.\nLes bons de caisse pour les clients en compte seront archivés dans les documents.\nLes bordereaux seront effacés.\nVoulez-vous continuer ?", "Oui", "Non") = "1" Then
            Me.mouse = mouse.Wait
            If Not Exist(User.home & chemin) Then Mkdir User.home & chemin
            Shell "mysqldump -h " & Settings["/dbase/Host"] & " -u " & Utils.db.Login & " -p" & Utils.db.Password & " " & "Laurux" & cs & " " & "--add-drop-table" & " " & ">" & " " & User.home & "/Sauve/Laurux" & cs & ".sql" & Format$(Now, "yyyymmdd") Wait
            Moulinage()
          Endif
        Endif
      Endif
    Endif
  Endif
  
End

Public Sub Livre_caisse()
  
  Dim rTkx, rttva As Result
  Dim rTkFam As Result
  Dim rTkhv As Result
  Dim rCaisse As Result
  Dim Tabz As String
  Dim Tabe, Tabl As String
  Dim Tabr As String
  Dim Posy As Integer
  Dim Filename As String
  Dim sFam As String = "0,00"
  Dim sFam2 As String = "0,00"
  Dim sLFam, tintitule As String
  Dim sMtfam As String = 0
  Dim sMtreg As String = 0
  Dim sreg As String
  Dim sqte As String
  Dim totcaisse As String = 0
  Dim totventes As String = 0
  Dim Fdc As String = "0"
  Dim Totnbtck As Integer = 0
  Dim Pnm, itva As Float = 0
  Dim Enc As Boolean = False
  Dim pdf As Clivre
  Dim Ncaisse, sintitule As String
  
  With Utils
    Filename = User.home & "/Livre.pdf"
    pdf = New Clivre("P", "mm", "A4")
    pdf.Open()
    pdf.AliasNbPages()
    rCaisse = Utils.db.Exec("select * from  " & Cbase.Table("TabCaisses") & " order by code")
    If rCaisse.Available Then
      Repeat
        Ncaisse = rCaisse!code
        sIntitule = "Livre de caisse du " & Format$(DateChooser1.Value, "dd-mm-yyyy") & " : Caisse N° " & Ncaisse
        Tabz = "Fiches_Ticketz" & Ncaisse
        Tabr = "Fiches_Regltz"
        Tabe = "Fiches_EntTickets" & Ncaisse
        Tabl = "Fiches_LigTickets" & Ncaisse
        Try Fdc = Format$(rCaisse!fndc, "0.00")
        totcaisse = Val(.cpoint(Totcaisse)) + Val(.cpoint(Fdc))
        rTkx = Utils.db.Exec(" select * from " & Tabr & " where caisse = &1 order by type", Ncaisse)
        If rTkx.Available Then
          Enc = True
        Else
          Enc = False
        Endif
        rTkx = Utils.db.Exec(" select * from " & Cbase.Table("TabEntTck") & " where statut = &1 and caisse = &2 and left(date,10) = &3", 0, Ncaisse, Format$(DateChooser1.Value, "dd-mm-yyyy"))
        If rTkx.Available Or If Enc = True Then
          pdf.newPage()
          Totnbtck = rTkx.count
          If rTkx.Available Then
            Repeat
              If rTkx!savoir = 1 Then
                Try totventes = Val(.cpoint(Totventes)) - Val(.cpoint(rTkx!mttc))
              Else
                Try totventes = Val(.cpoint(Totventes)) + Val(.cpoint(rTkx!mttc))
              Endif
            Until rTkx.MoveNext()
          Endif
          Posy += 5
          Pdf.Level3(sIntitule, Posy)
          Posy += 8
          pdf.Level2("Fond de caisse initial ", Fdc, "", Posy)
          Posy += 8
          pdf.Lines2(Posy)
          Posy += 5
          rTkhv = Utils.db.Exec(" select * from " & Tabr & " where caisse = &1 order by type", Ncaisse)
          If rTkhv.Available Then
            'Posy += 5
            'Pdf.Level3(sIntitule, Posy)
            'Posy += 8
            'pdf.Level2("Fond de caisse initial ", Fdc, "", Posy)
            'Posy += 8
            'pdf.Lines2(Posy)
            'Posy += 5
            pdf.Level2("Mouvements hors ventes ", "", "", Posy)
            Posy += 5
            Repeat
              If rTkhv!type = "F" Or If rTkhv!type = "G" Or If rTkhv!type = "H" Or If rTkhv!type = "P" Then
                If rTkhv!type = "F" Then sreg = "Sortie " & rTkhv!intitule
                If rTkhv!type = "G" Then sreg = "Entree espèces " & rTkhv!intitule
                If rTkhv!type = "H" Then sreg = "Entree chèques " & rTkhv!intitule
                If rTkhv!type = "P" Then sreg = "Entree cartes " & rTkhv!intitule
                sMtreg = Format$(Val(.cpoint(rTkhv!montant)), "0.00")
                If rTkhv!type = "F" Then sMtreg = "-" & sMtreg
                If rTkhv!type = "F" Then
                  totcaisse = Val(.cpoint(Totcaisse)) - Val(.cpoint(rTkhv!montant))
                Else
                  If rTkhv!type = "G" Then totcaisse = Val(.cpoint(Totcaisse)) + Val(.cpoint(rTkhv!montant))
                Endif
                sqte = rTkhv!qte
                If rTkhv!type = "F" Or If rTkhv!type = "G" Or If rTkhv!type = "P" Or If rTkhv!type = "H" Then
                  pdf.Level2(sReg, sMTreg, sqte, Posy)
                  Posy += 5
                Endif
              Endif
            Until rTkhv.MoveNext()
            Posy += 3
            pdf.Lines2(Posy)
            Posy += 5
          Endif
          rTkhv = Utils.db.Exec(" select * from " & Tabr & " where caisse = &1 and left(date,10) = &2 order by type", Ncaisse, Format$(DateChooser1.Value, "dd-mm-yyyy"))
          If rTkhv.Available Then
            pdf.Level2("Mouvements ventes ", "", "", Posy)
            Posy += 5
            Repeat
              If rTkhv!type = "N" Then sreg = "Tot. rglts par especes "
              If rTkhv!type = "Q" Then sreg = "Tot. rendu monnaie "
              If rTkhv!type = "U" Then sreg = "Tot. rglts par cartes "
              If rTkhv!type = "V" Then sreg = "Tot. rglts par chèques "
              If rTkhv!type = "B" Then sreg = "Tot. bonus utilises "
              If rTkhv!type = "E" Then sreg = "Tot. bons de reduction "
              If rTkhv!type = "X" Then sreg = "Tot. bons achat"
              If rTkhv!type = "Y" Then sreg = "Tot. chèques cadeaux"
              If rTkhv!type = "W" Then sreg = "Tot. credits "
              If rTkhv!type = "Z" Then sreg = "Tot. avoirs "
              If rTkhv!type = "M" Then sreg = "Tot. clients compte "
              If rTkhv!type = "1" Then sreg = "Tot. chèques entreprise "
              'IF rTkhv!type = "G" THEN sreg = "Tot. acomptes verses"
              If rTkhv!type = "C" Then sreg = "Tot. acomptes utilises"
              sMtreg = Format$(Val(.cpoint(rTkhv!montant)), "0.00")
              If rTkhv!type = "N" Then totcaisse = Val(.cpoint(Totcaisse)) + Val(.cpoint(rTkhv!montant))
              If rTkhv!type = "Q" Then totcaisse = Val(.cpoint(Totcaisse)) - Val(.cpoint(rTkhv!montant))
              sqte = rTkhv!qte
              If rTkhv!type = "A" Or If rTkhv!type = "E" Or If rTkhv!type = "B" Or If rTkhv!type = "C" Or If rTkhv!type = "N" Or If rTkhv!type = "U" Or If rTkhv!type = "V" Or If rTkhv!type = "X" Or If rTkhv!type = "Y" Or If rTkhv!type = "W" Or If rTkhv!type = "Z" Or If rTkhv!type = "Q" Or If rTkhv!type = "M" Or If rTkhv!type = "1" Then
                pdf.Level2(sReg, sMTreg, sqte, Posy)
                Posy += 5
              Endif
            Until rTkhv.MoveNext()
          Endif
          Posy += 5
          pdf.Level2("Total ventes ", Format$(Val(.cpoint(Totventes)), "0.00"), "", Posy)
          Posy += 5
          pdf.Lines2(Posy)
          Posy += 5
          pdf.Level2("Fond de caisse ", Format$(Val(.cpoint(Totcaisse)), "0.00"), "", Posy)
          Posy += 5
          pdf.Lines2(Posy)
          Posy += 5
          rTkx = Utils.db.Exec(" select * from " & Tabe & " where type = &1", "1")
          If rTkx.Available Then
            totventes = 0
            Repeat
              Try totventes = Val(.cpoint(Totventes)) + Val(.cpoint(rTkx!mttc))
            Until rTkx.MoveNext()
            Posy += 5
            pdf.Level2("Total bons de caisse ", Format$(Val(.cpoint(Totventes)), "0.00"), "", Posy)
            Posy += 5
            pdf.Lines2(Posy)
            Posy += 5
          Endif
          pdf.Lines2(Posy)
          pdf.Level2("Nombre de tickets :", Totnbtck, "", Posy)
          Posy += 5
          Try Pnm = Totventes / Totnbtck
          If Error Then Pnm = 0
          pdf.Level2("Panier moyen :", Format$(Pnm, "0.00"), "", Posy)
          Posy += 5
          pdf.Lines2(Posy)
          Posy += 5
          rttva = Utils.db.Exec("select * from  " & Tabl & " WHERE left(intitule,3) = &1 order by intitule", "TVA")
          If rttva.Available Then
            pdf.Level2("Récapitulatif TVA", "", "", Posy)
            Posy += 5
            tintitule = rttva!intitule
            Repeat
              If tintitule <> rttva!intitule Then
                pdf.Level2(Tintitule, itva, "", Posy)
                Posy += 5
                itva = 0
              Endif
              itva = itva + Val(utils.cpoint(rttva!montant))
              tintitule = rttva!intitule
            Until rttva.MoveNext()
            pdf.Level2(Tintitule, itva, "", Posy)
            Posy += 5
            pdf.Lines2(Posy)
          Endif
          Try rTkx = Utils.db.Exec(" select * from " & Tabz & " order by fam")
          If Not Error Then
            sqte = "0,00"
            If rTkx.Available Then
              pdf.Level2("Total ventes par familles", "", "", Posy)
              Posy += 5
              sFam2 = "Famille " & Left$(rTkx!fam, 2)
              Repeat
                sFam = "Famille " & Left$(rTkx!fam, 2)
                If sFam2 <> sFam Then
                  pdf.Level2(sFam2 & " " & rTkFam!libell_fam & " " & Format$(Val(utils.cpoint(sMTfam)) / Totventes * 100, "0.00") & " %", sMTfam, sqte, Posy)
                  Posy += 5
                  sMtfam = "0,00"
                  sQte = "0,00"
                Endif
                rTkFam = Utils.db.Exec(" select * from " & Cbase.Table("TabFam") & " where code_fam = &1", Left$(rTkx!fam, 2))
                If Not rTkFam.Available Then rTkFam = Utils.db.Exec(" select * from " & Cbase.Table("TabFam") & " where code_fam = &1", rTkx!fam)
                sLFam = rTkFam!libell_fam
                sMtfam = Format$(Val(Utils.cpoint(sMtfam)) + Val(Utils.cpoint(rTkx!montant)), "0.00")
                sqte = Format$(Val(.cpoint(sqte)) + Val(.cpoint(rTkx!qte)), "0.00")
                sFam2 = sFam
              Until rTkx.MoveNext()
              If totventes = 0 Then totventes = 1
              pdf.Level2(sFam & " " & sLFam & " " & Format$(Val(utils.cpoint(sMTfam)) / Totventes * 100, "0.00") & " %", sMTfam, sqte, Posy)
              Posy += 5
            Endif
          Endif
        Endif
        'On met à jour le fond de caisse
        Utils.db.Exec("UPDATE  " & Cbase.Table("TabCaisses") & "  SET fndc = &2 WHERE code = &1", Ncaisse, Val(Utils.cpoint(Totcaisse)))
        'et on continue
        sReg = 0
        sMTreg = 0
        sqte = 0
        sMtfam = 0
        Totventes = 0
        Totcaisse = 0
        Pnm = 0
        Posy = 0
      Until rCaisse.MoveNext()
      Dec Application.Busy
      Utils.db.Exec("drop Table IF exists " & Tabz & "")
      pdf.Output(Filename, False)
      Visualiseur.Prog_Editeur(Filename)
    Else
      Message.Info("Aucune donnée n'est a traiter !")
    Endif
  End With
  
End

Public Sub Moulinage()
  
  Dim rTck As Result
  Dim rlTck As Result
  Dim rlTck2 As Result
  Dim rcpt As Result
  Dim rResult As Result
  Dim vente As String
  Dim ivente As String
  Dim tva As String
  Dim itva As String
  Dim montant As String
  Dim cvclibl As String
  Dim nmclibl As String
  Dim pnmclibl As String
  Dim adr1bl As String
  Dim adr2bl As String
  Dim cpbl As String
  Dim villebl As String
  Dim rmobl As String
  Dim numbon As String
  Dim numlig As Integer = 0
  Dim nmlig As String
  Dim bloc As String
  Dim Exo As String
  Dim Datec As Date
  Dim sDate As String
  Dim origine As String
  Dim scli As String
  Dim $intit, resto As String
  
  Virements()
  numecr = "numecriture"
  numr = Ecritures(numecr)
  numr = numr + 1
  numecr = "numecriture2"
  numr2 = Ecritures(numecr)
  numr2 = numr2 + 1
  'On récupère le journal de caisse
  rResult = Utils.db.Exec("SELECT * FROM " & Cbase.Table("TabJour") & " where code_jo = &1", Jnal)
  If rResult.Available Then CptCaisse = rResult!cde_banque
  Datem = Format$(DateChooser1.Value, "dd.mm.yyyy")
  Datec = DateChooser1.Value
  rResult = Utils.db.Exec("SELECT * FROM " & Cbase.Table("TabParam") & " ")
  With utils
    Me.mouse = Mouse.Wait
    If rResult.Available Then numbon = rResult!dnbon
    Try rTck = Utils.db.Exec("SELECT * FROM " & Cbase.Table("TabEntTck") & " order by numero")
    If rTck.Available Then
      If Mid(rtck!date, 7, 4) & Mid(rtck!date, 4, 2) & Left(rtck!date, 2) < Format$(DateChooser1.Value, "yyyymmdd") Then
        sDate = Left(rtck!date, 2) & "." & Mid(rtck!date, 4, 2) & "." & Mid(rtck!date, 7, 4)
        Message.Info("Il reste des tickets à la date du " & sdate & " !\nVeuillez faire un moulinage à cette date SVP.")
      Else
        rTck = Utils.db.Exec("SELECT * FROM " & Cbase.Table("TabEntTck") & " where left(date,10) = &1 order by numero", Format$(DateChooser1.Value, "dd-mm-yyyy"))
        If rTck.Available Then
          ' On gère d'abord les clients caisse
          Utils.db.Exec("LOCK TABLES " & Cbase.Table("TabParam") & " WRITE, " & Cbase.Table("TabEntTck") & " WRITE, " & Cbase.Table("TabLigTck") & " WRITE, " & Cbase.Table("TabComptes") & " WRITE, " & Cbase.Table("Totalisation") & " WRITE, " & Cbase.Table("TabFam") & " WRITE, " & Cbase.Table("TabTvav") & " WRITE, " & Cbase.Table("TabMvt") & " WRITE, " & Cbase.Table("TabArt") & " WRITE, " & Cbase.Table("TabHisEntTck") & " WRITE, " & Cbase.Table("TabHisLigTck") & " WRITE, " & Cbase.Table("TabJour") & " WRITE,  " & Cbase.Table("TabCli") & " WRITE, " & Cbase.Table("TabBl") & " WRITE, " & Cbase.Table("TabLigbl") & " WRITE, " & Tab & " WRITE ")
          Repeat
            If rtck!sresto = "1" Then 
              resto = "R"
            Else
              resto = ""
            Endif
            Utils.db.Exec("INSERT INTO " & Cbase.Table("TabHisEntTck") & " (caisse, numero, date, client, scheque, mcheque, scarte, mcarte, sespeces, mespeces, scredit, mcredit, mht, mtva, mttc, savoir, scavoir, mavoir, vendeur, carte, points, sresto, mresto) VALUES (&1, &2, &3, &4, &5, &6, &7, &8, &9, &{10}, &{11}, &{12}, &{13}, &{14}, &{15}, &{16}, &{17}, &{18}, &{19}, &{20}, &{21}, &{22}, &{23})", rtck!caisse, rtck!numero, Utils.Cdate_Dbase(Left$(rtck!date, 10)), rtck!client, rtck!scheque, rtck!mcheque, rtck!scarte, rtck!mcarte, rtck!sespeces, rtck!mespeces, rtck!scredit, rtck!mcredit, rtck!mht, rtck!mtva, rtck!mttc, rtck!savoir, rtck!scavoir, rtck!mavoir, rtck!vendeur, rtck!carte, rtck!points, resto, rtck!mresto)
            If Jnl Then
              If rTck!type = "0" Then
                rResult = Utils.db.Exec("SELECT * FROM " & Cbase.Table("TabComptes") & " Where compte_cc = &1", client)
                If rResult.Available Then
                  ivente = rResult!intitule_cc
                Endif
                If Not IsNull(rTck!mttc) Then
                  If rTck!savoir = "1" Then
                    Maj_Totalisation(Client, ivente, "-" & rTck!mttc)
                  Else
                    Maj_Totalisation(Client, ivente, rTck!mttc)
                  Endif
                Endif
              Endif
              rlTck = Utils.db.Exec("SELECT * FROM " & Cbase.Table("TabLigTck") & " where numero = &1 order by lInd", rTck!numero)
              If rlTck.Available Then
                Repeat
                  If rlTck!type = "A" Or If rlTck!type = "M" Or If rlTck!type = "S" Or If rlTck!type = "T" Or If rlTck!type = "L" Then
                    If rlTck.index < rlTck.count - 1 Then 
                      $intit = rlTck!intitule
                      rlTck.MoveNext()
                      If rlTck!type <> "S" And If rlTck!type <> "T" Then 
                        rlTck.MovePrevious()
                      Endif
                    Endif
                    If rlTck!type <> "L" And If rlTck!type <> "M" Then
                      rcpt = Utils.db.Exec("SELECT * FROM " & Cbase.Table("TabFam") & " where code_fam = &1", rlTck!fam)
                      If rcpt.Available Then
                        vente = rcpt!compt_fam
                        rResult = Utils.db.Exec("SELECT * FROM " & Cbase.Table("TabComptes") & " Where compte_cc = &1", vente)
                        If rResult.Available Then
                          ivente = rResult!intitule_cc
                        Endif
                        montant = Val(.cpoint(rlTck!mht))
                        If rTck!type = "0" Then
                          If rTck!savoir = "1" Then
                            Maj_Totalisation(vente, ivente, "-" & montant)
                          Else
                            Maj_Totalisation(vente, ivente, montant)
                          Endif
                        Endif
                        tva = rcpt!cdtva_fam
                        rResult = Utils.db.Exec("SELECT * FROM " & Cbase.Table("TabTvav") & " Where code_tva = &1", tva)
                        If rResult.Available Then
                          tva = rResult!cc_tva
                        Endif
                        rResult = Utils.db.Exec("SELECT * FROM " & Cbase.Table("TabComptes") & " Where compte_cc = &1", tva)
                        If rResult.Available Then
                          itva = rResult!intitule_cc
                        Endif
                        rlTck2 = Utils.db.Exec("SELECT * FROM " & Cbase.Table("TabLigTck") & " where numero = &1 and type = &2 and numlig = &3", rTck!numero, "T", rlTck!numlig, rlTck!code, rlTck!block)
                        If rlTck2.Available Then
                          montant = Val(.cpoint(rlTck2!mtva))
                        Else
                          rlTck2 = Utils.db.Exec("SELECT * FROM " & Cbase.Table("TabLigTck") & " where numero = &1 and type = &2 and numlig = &3", rTck!numero, "M", rlTck!numlig, rlTck!code, rlTck!block)
                          If rlTck2.Available Then
                            montant = Val(.cpoint(rlTck2!mtva))
                          Else
                            montant = Val(.cpoint(rlTck!mtva))
                          Endif
                        Endif
                      Endif
                      If IsNull(montant) Then montant = 0
                      Utils.db.Exec("INSERT INTO " & Cbase.Table("TabHisLigTck") & " (numero, numlig, code, intitule, montant, qte, type, fam, mht, mrem, tva) VALUES (&1, &2, &3, &4, &5, &6, &7, &8, &9, &{10}, &{11})", rltck!numero, rltck!numlig, rltck!code, $intit, rltck!montant, rltck!qte, rltck!type, rltck!fam, rltck!mht, rltck!mrem, rltck!tva)
                      If rTck!savoir = "1" Then
                        If rlTck!type <> "L" And If rlTck!type <> "M" Then Maj_Totalisation(Tva, iTva, "-" & montant)
                      Else
                        If rlTck!type <> "L" And If rlTck!type <> "M" Then Maj_Totalisation(Tva, iTva, montant)
                      Endif
                    Endif
                  Endif
                Until rlTck.MoveNext()
              Endif
            Endif
            'Puis on gère les clients en compte
            scli = rTck!client
            If rTck!type = "1" Then
              'On recupère le dernier numéro de bon
              If numbon = "" Then numbon = "000000"
              numbon = Val(numbon) + 1
              numbon = Format$(numbon, "000000")
              ' Et on met à jour
              Utils.db.Exec("UPDATE  " & Cbase.Table("TabParam") & "  SET  dnbon = &1", numbon)
              rResult = Utils.db.Exec("SELECT * FROM " & Cbase.Table("TabCli") & " Where cli_code = &1", scli)
              If rResult.Available Then
                cvclibl = rResult!cli_rs_soc
                nmclibl = rResult!cli_nom
                pnmclibl = rResult!cli_pnm
                adr1bl = rResult!cli_adr1
                adr2bl = rResult!cli_adr2
                cpbl = rResult!cli_cd_ptl
                villebl = rResult!cli_ville
                typec = rResult!cli_typec
                artrm = rResult!cli_rart
                rmobl = rResult!cli_rmo
                Exo = rResult!cli_exo
              Endif
              'On met à jour le fichier des entetes de bl
              Utils.db.Exec("INSERT INTO " & Cbase.Table("TabBl") & "(numbl,datebl,cdclibl, nmclibl, rmobl, rartbl, type, pnmclibl, adr1bl, adr2bl, cpbl, villebl, exobl, cvclibl, tvar, imp, acpt, mreg, totalht, retro, marge_art, remmobl, remartbl, marge_mo) VALUES (&1,&2,&3,&4,&5,&6,&7,&8,&9,&{10},&{11},&{12},&{13},&{14},&{15}, &{16}, &{17}, &{18}, &{19}, &{20}, &{21}, &{22}, &{23}, &{24})", numbon, Utils.Cdate_Dbase(Datem), scli, nmclibl, rmobl, Artrm, "B", Pnmclibl, adr1bl, adr2bl, cpbl, villebl, Exo, Cvclibl, 0, 0, 0, "", 0, 0, 0, rmobl, artrm, 0)
              'On met à jour les lignes de bl
              'On s'occupe des articles
              rlTck.MoveFirst()
              'on ecrit la provenance du bl
              Inc numlig
              nmlig = Format$(Str(numlig), "0000")
              Bloc = nmlig
              origine = "Ticket de caisse numéro " & rTck!numero & " du " & rTck!date
              Utils.db.Exec("INSERT INTO " & Cbase.Table("TabLigbl") & "(num_ligbl, numlig_ligbl, com_ligbl, typel_ligbl, block_ligbl) VALUES (&1, &2, &3, &4, &5)", numbon, nmlig, origine, "C", Bloc)
              Repeat
                If rlTck!type = "A" Then
                  Qte = rlTck!qte
                  Recup_Art(rlTck!code, qte, rlTck!mht)
                  Inc numlig
                  nmlig = Format$(Str(numlig), "0000")
                  Bloc = nmlig
                  Utils.db.Exec("INSERT INTO " & Cbase.Table("TabLigbl") & "(num_ligbl, numlig_ligbl,code_ligbl, libel_ligbl, fam_ligbl, pu_ligbl, qte_ligbl, brut_ligbl, rem_ligbl, netht_ligbl, tx_ligbl, nettc_ligbl, typel_ligbl, dec_ligbl, block_ligbl) VALUES (&1, &2, &3, &4, &5, &6, &7, &8, &9, &{10}, &{11}, &{12}, &{13}, &{14}, &{15})", numbon, nmlig, rlTck!code, artdsg, artfam, artpu, qte, artbrut, Artrm, artnet, Arttx, Arttc, "A", Nbd, Bloc)
                Endif
                If rlTck!type = "O" Then
                  'Eco participation
                  If rlTck!intitule = " Dont Eco-taxe" Then
                    Inc numlig
                    nmlig = Format$(Str(numlig), "0000")
                    Utils.db.Exec("INSERT INTO " & Cbase.Table("TabLigbl") & "(num_ligbl, numlig_ligbl,code_ligbl, libel_ligbl, fam_ligbl, pu_ligbl, qte_ligbl, brut_ligbl, rem_ligbl, netht_ligbl, tx_ligbl, nettc_ligbl, typel_ligbl, dec_ligbl, block_ligbl) VALUES (&1, &2, &3, &4, &5, &6, &7, &8, &9, &{10}, &{11}, &{12}, &{13}, &{14}, &{15})", numbon, nmlig, rlTck!code, rlTck!intitule, "", Format$(Val(rlTck!montant), "0.00"), "1", Format$(Val(rlTck!montant), "0.00"), 0, Format$(Val(rlTck!montant), "0.00"), Arttx, Format$(Val(rlTck!montant), "0.00"), "E", "0", Bloc)
                  Endif
                Endif
              Until rlTck.MoveNext()
              Utils.db.Exec("UPdate  " & Cbase.Table("TabBl") & "  SET marge_art =&2 WHERE cdclibl = &1", scli, marge)
            Endif
          Until rTck.MoveNext()
          Verif()
          Maj_Compta()
          Maj_Tresorerie()
          Utils.db.Exec("UNLOCK TABLES")
          'On recalcule les soldes
          'Csolde.Recalc_solde()
          'On imprime le livre de caisse
          Livre_caisse()
          'On efface les Tables
          rTck = Utils.db.Exec("SELECT * FROM " & Cbase.Table("TabEntTck") & " where mid(date,7,4) = &1 and mid(date,4,2) = &2 and left(date,2) = &3", Format$(DateChooser1.Value, "yyyy"), Format$(DateChooser1.Value, "mm"), Format$(DateChooser1.Value, "dd"))
          If rTck.Available Then
            Repeat
              Utils.db.Exec("delete FROM " & Cbase.Table("TabEntTck") & " where numero = &1", rTck!numero)
              Utils.db.Exec("delete FROM " & Cbase.Table("TabLigTck") & " where numero = &1", rTck!numero)
            Until rTck.MoveNext()
          Endif
          Utils.db.Exec("delete from " & Cbase.Table("TabReglt") & " where date = &1", Format$(DateChooser1.Value, "dd-mm-yyyy"))
          'Raz_Tables()
          Me.mouse = Mouse.Default
          Music.play
          Message.Info("Traitement terminé !")
        Else
          Music.play
          Message.Info("Acune donnée n'est a traiter pour cette sélection !")
        Endif
      Endif
    Else
      Music.play
      Message.Info("Acune donnée n'est a traiter pour cette sélection !")
    Endif
  End With
  Me.Mouse = mouse.Default
  
End

Public Sub Raz_Tables()
  
  Try Utils.db.EXEC("CREATE TABLE " & Cbase.Table("TabReglt") &
    "(lInd INT NOT NULL AUTO_INCREMENT," &
    "intitule Char(30)," &
    "montant Char(12)," &
    "qte Char(12)," &
    "type Char(15)," &
    "caisse Char(2)," &
    "date Char(17)," &
    "PRIMARY KEY (lInd))" & "ENGINE = MYISAM")
  
  Try Utils.db.EXEC("CREATE TABLE " & Cbase.Table("TabEntTck") &
    "(lInd INT NOT NULL AUTO_INCREMENT," &
    "caisse Char(2)," &
    "vendeur Char(35)," &
    "numero Char(7)," &
    "date Char(17)," &
    "client Char(30)," &
    "scheque Char(1)," &
    "mcheque Char(12)," &
    "nmcheque Char(30)," &
    "scarte  Char(1)," &
    "nmcarte Char(30)," &
    "mcarte Char(12)," &
    "sespeces Char(1)," &
    "mespeces Char(12)," &
    "scredit  Char(1)," &
    "mcredit Char(12)," &
    "nmcredit Char(30)," &
    "sbachat  Char(1)," &
    "mbachat Char(12)," &
    "scavoir  Char(1)," &
    "mavoir Char(12)," &
    "nmavoir Char(30)," &
    "sresto  Char(1)," &
    "mresto Char(12)," &
    "mht Char(12)," &
    "mtva Char(12)," &
    "mttc Char(12)," &
    "statut Char(1)," &
    "savoir Char(1) ," &
    "type Char(1) ," &
    "mrem Char(12)," &
    "carte Char(13)," &
    "points Decimal(12,3)," &
    "PRIMARY KEY (lInd))" & "ENGINE = MYISAM")
  
  Try Utils.db.EXEC("CREATE TABLE " & Cbase.Table("TabLigTck") &
    "(lInd INT NOT NULL AUTO_INCREMENT," &
    "numero Char(7)," &
    "numlig Char(3)," &
    "code Char(15)," &
    "intitule  Char(50)," &
    "montant Char(12)," &
    "qte Char(12)," &
    "type Char(1)," &
    "fam Char(5)," &
    "mht Char(12)," &
    "mrem Char(12)," &
    "mtva Char(12)," &
    "PRIMARY KEY (lInd))" & "ENGINE = MYISAM")
  
End

Public Sub Recup_Art(code As String, qtea As String, mht As String)
  
  Dim Remtypec As Result
  Dim Rarts As Result
  
  With utils
    Rarts = Utils.db.Exec("SELECT * FROM " & Cbase.Table("TabArt") & " where art_code = &1", Code)
    If Rarts.Available Then
      Artdsg = Rarts!art_design
      Artdsg2 = Rarts!art_design2
      Artfam = Rarts!art_fam
      Nbd = Rarts!art_nbd ' décimale des prix
      Decq = Rarts!art_dec ' décimale des quantités
      Nbdec = .Find_Nbdec(Nbd)
      Paht = Format$(Rarts!art_paht, "0.000")
      Pmp = Rarts!art_pmp
      Artpu = Format$(Rarts!art_pvht, Nbdec)
      Artbrut = Format(Val(Artpu), Nbdec)
      If Val(.cpoint(artpu)) = 0 Then
        Artbrut = Format(Val(mht), Nbdec)
      Endif
      If IsNull(artrm) Then
        Remtypec = Utils.db.Exec("SELECT * FROM " & Cbase.Table("TabRemTypec") & " where coder = &1 and codef = &2", Typec, Artfam)
        If RemTypec.Available Then
          Artrm = RemTypec!remise
          RemType = Artrm
        Endif
      Endif
      arr = Rarts!art_cdarr
      Arttx = Rarts!art_tva
      Decm = Rarts!art_dec
      Ecot = Rarts!art_eco
      Tcp = Rarts!art_cpp
      Try Rms[0, 0] = Str(Rarts!qte1)
      Try Rms[0, 1] = Str(Rarts!qte2)
      Try Rms[0, 2] = Str(Rarts!rem1)
      Try Rms[1, 0] = Str(Rarts!qte3)
      Try Rms[1, 1] = Str(Rarts!qte4)
      Try Rms[1, 2] = Str(Rarts!rem2)
      Try Rms[2, 0] = Str(Rarts!qte5)
      Try Rms[2, 1] = Str(Rarts!qte6)
      Try Rms[2, 2] = Str(Rarts!rem3)
      Try Rms[3, 0] = Str(Rarts!qte7)
      Try Rms[3, 1] = Str(Rarts!qte8)
      Try Rms[3, 2] = Str(Rarts!rem4)
      Try Rms[4, 0] = Str(Rarts!qte9)
      Try Rms[4, 1] = Str(Rarts!qte10)
      Try Rms[4, 2] = Str(Rarts!rem5)
      Try Rms[5, 0] = Str(Rarts!qte11)
      Try Rms[5, 1] = Str(Rarts!qte12)
      Try Rms[5, 2] = Str(Rarts!rem6)
      If Val(.cpoint(artpu)) <> 0 Then
        Artbrut = Format$(Val(.CPoint(Artpu)) * Val(.CPoint(Qtea)), Nbdec)
      Else
        artpu = Format$(Val(.CPoint(Artbrut)) / Val(.CPoint(Qtea)), Nbdec)
      Endif
      Remises_quantitatives()
      Decimal()
      If Val(Artrm) <> 0 Then
        Try Artnet = Format$(Val(.CPoint(Artbrut)) - (Val(.CPoint(Artbrut)) * Val(.CPoint(Artrm)) / 100), Nbdec)
      Else
        Artnet = Format(Val(Artbrut), Nbdec)
      Endif
      Calc_Marge()
    Endif
    
  End With
  
End

'*****************************************
'* On récupère les remises quantitatives *
'*****************************************
Public Sub Remises_quantitatives()
  
  Dim i As Integer
  
  With Utils
    For i = 0 To Rms.Bounds[0] - 1
      If IsNull(Rms[i, 2]) Then
        Break
      Else
        If Val(Utils.cpoint(Qte)) >= Val(.Cpoint(rms[i, 0])) And Val(Utils.cpoint(qte)) <= Val(.Cpoint(rms[i, 1])) Then
          Try Artrm = Val(Artrm) + RemType + Val(.Cpoint(Rms[i, 2]))
          If Error Then Artrm = Val(Artrm)
          Break
        Endif
      Endif
    Next
    If Val(Artrm) <> 100 Then
      ArtNet = Format$(Val(.CPoint(Artbrut)) - (Val(.CPoint(Artbrut)) * Val(.CPoint(Artrm)) / 100), Nbdec)
      Calcttc()
    Endif
  End With
  
End

'*********************************
'* Calcul du TTC du produit      *
'*********************************
Public Sub CalcTTC()
  
  Recup_Tva()
  Arttc = Val(Utils.CPoint(Artnet)) + (Val(Utils.CPoint(Artnet)) * Ttva / 100)
  arrondi()
  tx = 1 + (Ttva / 100)
  Artnet = Format$(Val(Utils.CPoint(Arttc)) / Tx, Nbdec)
  If Val(Artrm) = 0 Then Artnet = Artbrut
  
End

'************************
'* Recup de la Tva      *
'************************
Public Sub Recup_Tva()
  
  Dim hResult As Result
  
  Ttva = 0
  hResult = Utils.db.Exec("select * from " & Cbase.Table("TabTvav") & " where code_tva = &1 ", Arttx)
  If hResult.Available Then
    Ttva = hResult!taux_tva
  Endif
  
End

'*********************************
'* Calcul du nombre de decimal   *
'*********************************
Public Sub Decimal()
  
  With Utils
    qte = .CPoint(qte)
    If Decq = "0" Then
      qte = Format$(Val(qte), "0")
    Else
      If Decq = "2" Then
        qte = Format$(Val(qte), "0.00")
      Else
        If decq = "3" Then
          qte = Format$(Val(qte), "0.000")
        Endif
      Endif
    Endif
  End With
  
End

'***********************************
'*        On gère l' arrondi       *
'***********************************
Public Sub arrondi()
  
  Try Arttc = Format$(Val(Utils.CPoint(Arttc)), "0.00")
  If Not Arttc Then Arttc = "0,00"
  If arr = "0,05" Then
    If Right$(Arttc) Like "[34567]*" Then
      Arttc = Left$(Arttc, (Len(Arttc) - 1)) & "5"
    Else
      Arttc = Round(Val(Arttc), -1)
    Endif
  Endif
  
  If arr = "0,10" Then
    Arttc = Round(Val(Arttc), -1)
  Endif
  
  If arr = "0,50" Then
    If Abs(Val(Arttc)) <= Abs(Val(Left$(Arttc, (Len(Arttc) - 2)) & 25)) Then
      Arttc = Left$(Arttc, (Len(Arttc) - 2)) & "00"
    Else
      If Abs(Val(Arttc)) <= Abs(Val(Left$(Arttc, (Len(Arttc) - 2)) & 75)) Then
        Arttc = Left$(Arttc, (Len(Arttc) - 2)) & "50"
      Endif
      If Abs(Val(Arttc)) >= Abs(Val(Left$(Arttc, (Len(Arttc) - 2)) & 76)) Then
        Arttc = Round(Val(Arttc))
      Endif
    Endif
  Endif
  
  If arr = "1,00" Then
    Arttc = Round(Val(Arttc))
  Endif
  
End

Public Sub Calc_Marge()
  
  Dim rMrg As Result
  
  With utils
    If Pmp = 0 Then
      rMrg = Utils.db.Exec("SELECT * FROM " & Cbase.Table("TabFam") & " WHERE code_fam = &1", ArtFam)
      Try Marge = Val(.cpoint(marge)) + Val(.cpoint(Artnet)) / Val(.cpoint(rMrg!coef_fam))
    Else
      Try Marge = Val(.cpoint(marge)) + Val(.cpoint(Artnet)) - (Pmp * Val(.cpoint(qte)))
    Endif
  End With
  
End
'**********************************************************
'*      Creation table temporaire pour totalisation       *
'**********************************************************

Public Sub Ventilation()
  
  Utils.db.Exec("DROP TABLE IF EXISTS  Totalisation ")
  Utils.db.Exec("CREATE TABLE " & Cbase.Table("Totalisation") &
    "(compte Char(8) NOT NULL," &
    "intitule Char(25)," &
    "totalttc Char(25)," &
    "totalht Char(25)," &
    "totaltva Char(25)," &
    "codetva Char(1)," &
    "PRIMARY KEY (compte,codetva))" & "ENGINE = MYISAM")
  
End

'**********************************************************
'*  Creation table temporaire pour virements internes     *
'**********************************************************
Public Sub Virements()
  
  Utils.db.Exec("DROP TABLE IF EXISTS  Virements ")
  Utils.db.Exec("CREATE TABLE " & Tab &
    "(compte Char(8) NOT NULL," &
    "intitule Char(35)," &
    "type Char(1)," &
    "montant Decimal(12,2)," &
    "PRIMARY KEY (compte, type))" & "ENGINE = MYISAM")
  
End

'*****************************************************
'*  Récuperation du dernier numéro d'écriture        *
'*****************************************************
Public Function Ecritures(numecr2 As String) As String
  
  Dim Params As Result
  Dim nro As String
  
  Params = Utils.db.Exec("SELECT " & numecr & " FROM " & Cbase.Table("TabParam") & " ")
  If Params.Available Then
    If IsNull(Params["" & numecr2 & ""]) Then
      nro = 0
    Else
      nro = Params["" & numecr2 & ""]
    Endif
  Endif
  Return nro
  
End

'************************************************
'*  Mise a jour du dernier numéro d'écriture    *
'************************************************
Public Sub Majnum()
  
  Utils.db.Exec("UPDATE " & Cbase.Table("TabParam") & " set numecriture = &1, numecriture2 = &2", numr, numr2)
  
End

'**********************************************************
'*                   Recup parametres                     *
'**********************************************************
Public Sub Parametres()
  
  Dim rJnl As Result
  Dim rcli As Result
  Dim rcol As Result
  Dim colcpt As String
  'On récupère le journal des ventes
  rJnl = Utils.db.Exec("SELECT * FROM " & Cbase.Table("TabParam") & " ")
  If rJnl.Available Then
    Jnl = rJnl!jrnal4
    If IsNull(Jnl) Then Jnl = rJnl!jrnal
  Endif
  'On recupère les données pour la trésorerie.
  If rJnl.Available Then
    Jnal = rJnl!jrnal2
    Vic = rJnl!viremc
    Vichq = rJnl!viremchq
    Viautre = rJnl!virema
  Endif
  rcli = Utils.db.Exec("SELECT * FROM " & Cbase.Table("TabCliCaisse") & "")
  If rcli.Available Then
    Client = rcli!code
    Nclient = rcli!nom
  Endif
  rcol = Utils.db.Exec("SELECT * FROM " & Cbase.Table("TabComptes") & " where coll = &1 order by cast(compte_cc AS char)", "1")
  If rcol.Available Then
    Repeat
      Colcpt = rcol!compte_cc
      If Left$(Colcpt, 2) = Left$(Client, 2) Then
        collectif = Colcpt
        Break
      Endif
    Until rcol.MoveNext()
  Endif
  
End

'**********************************************************
'*                   Maj Totalisation                     *
'**********************************************************
Public Sub Maj_Totalisation(cpt As String, intit As String, montant As String)
  
  Dim hResult As Result
  Dim Mtnt As String
  
  With utils
    hResult = Utils.db.Exec("SELECT * FROM " & Cbase.Table("Totalisation") & " Where compte = &1", Cpt)
    'Si le compte existe dans la table temporaire
    If hResult.Available Then
      If Left$(cpt, 3) = "411" Then
        Mtnt = Format$(Val(.cpoint(montant)) + Val(.cpoint(hResult!totalttc)), "0.00")
        Utils.db.Exec("UPDATE " & Cbase.Table("Totalisation") & " set totalttc = &2 Where compte = &1 ", Cpt, mtnt)
      Else
        If Left$(cpt, 3) = "709" Then
          Mtnt = Format$(Val(.cpoint(montant)) + Val(.cpoint(hResult!totalht)), "0.00")
          Utils.db.Exec("UPDATE " & Cbase.Table("Totalisation") & " set totalht = &2 Where compte = &1 ", Cpt, mtnt)
        Else
          Try mtnt = Format$(Val(.cpoint(montant)) + Val(.cpoint(hResult!totalht)), "0.00")
          If Not Error Then Utils.db.Exec("UPDATE " & Cbase.Table("Totalisation") & " set totalht = &2 Where compte = &1 ", Cpt, mtnt)
        Endif
      Endif
    Else
      'Si le compte n'existe pas dans la table temporaire
      If Left(cpt, 3) = "411" Then
        Utils.db.Exec("INSERT INTO " & Cbase.Table("Totalisation") & "(compte, intitule, totalttc) VALUES (&1, &2, &3)", Cpt, intit, montant)
      Else
        Utils.db.Exec("INSERT INTO " & Cbase.Table("Totalisation") & "(compte, intitule, totalht) VALUES (&1, &2, &3)", Cpt, intit, montant)
      Endif
    Endif
  End With
  
End

Public Sub Verif()
  
  Dim hResult As Result
  Dim sCompte As String
  Dim sTotalD As String = "0"
  Dim sTotalC As String = "0"
  Dim sdif As Float
  
  With utils
    hResult = Utils.db.Exec("SELECT * FROM " & Cbase.Table("Totalisation") & " order by compte")
    If hResult.Available Then
      Repeat
        If Left$(hResult!compte, 3) = "411" Then
          sTotalD = hResult!totalttc
        Else
          sTotalC = Val(.cpoint(sTotalC)) + Val(.cpoint(hResult!totalht))
          sCompte = hResult!compte
        Endif
      Until hResult.MoveNext()
      hResult = Utils.db.Exec("SELECT * FROM " & Cbase.Table("Totalisation") & " Where compte = &1", sCompte)
      If hresult.Available Then
        If Val(.cpoint(sTotalD)) < Val(.cpoint(sTotalC)) Then
          sDif = Val(.cpoint(sTotalC)) - Val(.cpoint(sTotalD))
          sDif = Val(.cpoint(hResult!totalht)) - sDif
          Utils.db.Exec("UPDATE " & Cbase.Table("Totalisation") & " set totalht = &2 Where compte = &1 ", sCompte, sDif)
        Else
          If Val(.cpoint(sTotalD)) > Val(.cpoint(sTotalC)) Then
            sDif = Val(.cpoint(sTotalD)) - Val(.cpoint(sTotalC))
            sDif = Val(.cpoint(hResult!totalht)) + sDif
            Utils.db.Exec("UPDATE " & Cbase.Table("Totalisation") & " set totalht = &2 Where compte = &1 ", sCompte, sDif)
          Endif
        Endif
      Endif
    Endif
  End With
  
End

'**********************************************************
'*                   Maj comptabilité                     *
'**********************************************************
Public Sub Maj_Compta()
  
  Dim Cpt As String
  Dim coll As String
  Dim Libel As String
  Dim Mtc As Float
  Dim Mtd As Float
  Dim Sld As Float
  Dim SldTot As Float
  Dim Valid As Integer
  Dim Prov As Integer
  Dim Tresor As Integer
  Dim Pointee As Integer
  Dim Lettree As Integer
  Dim Cloturee As Integer
  Dim Relance As Integer
  Dim intit As String
  Dim rResult As Result
  Dim hResult As Result
  Dim numlt As String
  
  Valid = 1
  Prov = 0
  Tresor = 0
  Pointee = 0
  Lettree = 1
  Cloturee = 1
  Relance = 0
  Datem = Format$(DateChooser1.Value, "dd.mm.yyyy")
  Numlt = Format$(DateChooser1.Value, "ddmmyyyy")
  With Utils
    rResult = Utils.db.Exec("SELECT * FROM " & Cbase.Table("Totalisation") & "")
    If rResult.Available Then
      Libel = "Caisse du " & Datem
      Repeat
        collectif = ""
        Cpt = rResult!compte
        Intit = rResult!intitule
        If Left$(Cpt, 3) = "411" Then
          hResult = Utils.db.Exec("SELECT * FROM " & Cbase.Table("TabComptes") & " Where compte_cc = &1", Cpt)
          coll = hResult!coll_cc
          collectif = "1"
          Mtd = Val(.cpoint(rResult!totalttc))
          If Mtd < 0 Then
            Mtc = Abs(Mtd)
            Mtd = 0
          Endif
          Utils.db.Exec("INSERT INTO " & Cbase.Table("TabMvt") & "(jour, numero, compte, collectif, intitule, dte, libelle, montantd, montantc, validee, provisoire, tresorerie, pointee, lettree, cloturee, relance, numerodef, numdoc, numlot) VALUES (&1, &2, &3, &4, &5, &6, &7, &8, &9, &{10}, &{11}, &{12}, &{13}, &{14}, &{15}, &{16}, &{17}, &{18}, &{19})", Jnl, numr, coll, collectif, Intit, .Cdate_Dbase(Datem), Libel, Mtd, Mtc, Valid, Prov, Tresor, Pointee, lettree, Cloturee, Relance, numr2, Numlt, numlt)
          hResult = Utils.db.Exec("SELECT * FROM " & Cbase.Table("TabComptes") & " Where compte_cc = &1", coll)
          If hresult.Available Then
            If hResult!solde = "" Then
              Sld = Mtd - Mtc
            Else
              Sld = hResult!solde + Mtd - Mtc
            Endif
          Endif
          Utils.db.Exec("UPDATE " & Cbase.Table("TabComptes") & " set solde = &2 Where compte_cc = &1", coll, Sld)
          collectif = ""
        Endif
        If Left$(Cpt, 3) <> "411" And Left$(Cpt, 3) <> "445" Then
          If Left$(rResult!compte, 3) <> "709" Then
            If rResult!totalht And Val(.cpoint(rResult!totalht)) > 0 Then
              Mtc = Val(.cpoint(rResult!totalht))
              Mtd = 0
            Else
              Mtd = Val(.cpoint(rResult!totalht))
              Mtc = 0
            Endif
          Else
            If rResult!totalht And Val(.cpoint(rResult!totalht)) > 0 Then
              Mtd = Val(.cpoint(rResult!totalht))
              Mtc = 0
            Else
              Mtc = Val(.cpoint(rResult!totalht))
              Mtd = 0
            Endif
          Endif
        Endif
        If Left$(Cpt, 3) = "445" Then
          If Not IsNull(rResult!totalht) Then
            If Val(.cpoint(rResult!totalht)) > 0 Then
              Mtc = Val(.cpoint(rResult!totalht))
              Mtd = 0
            Else
              Mtd = Abs(Val(.cpoint(rResult!totalht)))
              Mtc = 0
            Endif
          Endif
        Endif
        Mtd = Abs(Mtd)
        Mtc = Abs(Mtc)
        Utils.db.Exec("INSERT INTO " & Cbase.Table("TabMvt") & "(jour, numero, compte, intitule, dte, libelle, montantd, montantc, validee, provisoire, tresorerie, pointee, lettree, cloturee, relance, numerodef, numdoc, numlot) VALUES (&1, &2, &3, &4, &5, &6, &7, &8, &9, &{10}, &{11}, &{12}, &{13}, &{14}, &{15}, &{16}, &{17}, &{18})", Jnl, numr, Cpt, Intit, .Cdate_Dbase(Datem), Libel, Mtd, Mtc, Valid, Prov, Tresor, Pointee, lettree, Cloturee, Relance, numr2, Numlt, numlt)
        hResult = Utils.db.Exec("SELECT * FROM " & Cbase.Table("TabComptes") & " Where compte_cc = &1", Cpt)
        SldTot = SldTot + Mtd - Mtc
        If hResult!solde = "" Then
          Sld = Mtd - Mtc
        Else
          Sld = hResult!solde + Mtd - Mtc
        Endif
        Utils.db.Exec("UPDATE " & Cbase.Table("TabComptes") & " set solde = &2 Where compte_cc = &1", Cpt, Sld)
        Mtd = 0
        Mtc = 0
        Try Utils.db.Exec("delete FROM " & Cbase.Table("Totalisation") & " where compte = &1", Cpt)
      Until rResult.MoveNext()
      If SldTot <> 0 Then
        
      Endif
      Majnum()
    Endif
  End With
  
End

Public Sub Maj_Tresorerie()
  
  Dim rResult As Result
  Dim hResult As Result
  Dim MtTot As Float = 0
  Dim CptCli As String
  Dim libel As String
  Dim Nfac As String = Format$(Now, "ddmmyyyy")
  Dim Nom As String
  Dim Mtd As Float
  
  rResult = Utils.db.Exec("SELECT * FROM " & Cbase.Table("TabJour") & " where code_jo = &1", jnal)
  CptCaisse = rResult!cde_banque
  
  ' On fait le total des especes
  hResult = Utils.db.Exec("SELECT * FROM " & Cbase.Table("TabEntTck") & " where sespeces = &1", "N")
  If hResult.Available Then
    Repeat
      If Mid(hResult!date, 7, 4) & Mid(hResult!date, 4, 2) & Left(hResult!date, 2) = Format$(DateChooser1.Value, "yyyy") & Format$(DateChooser1.Value, "mm") & Format$(DateChooser1.Value, "dd") Then
        Cptcli = hresult!client
        rResult = Utils.db.Exec("SELECT * FROM " & Cbase.Table("TabComptes") & " where compte_cc = &1", hResult!client)
        Nom = rresult!intitule_cc
        rResult = Utils.db.Exec("SELECT * FROM " & Tab & " where compte = &1 and type = &2", Client, "N")
        If rresult.Available Then
          MtTot = Val(Utils.cpoint(rResult!montant)) + Val(utils.cpoint(hResult!mespeces))
          Utils.db.Exec("UPDATE " & Tab & " set montant = &3, intitule = &4 Where compte = &1 and type = &2", Client, "N", MtTot, nom)
        Else
          Utils.db.Exec("INSERT INTO " & Tab & "(compte, type, montant, intitule) VALUES (&1, &2, &3, &4)", Client, "N", Val(Utils.cpoint(hResult!mespeces)), nom)
        Endif
        Csolde.Solde_caisse(Client)
      Endif
    Until hResult.MoveNext()
  Endif
  ' On fait le total des chèques
  MtTot = 0
  hResult = Utils.db.Exec("SELECT * FROM " & Cbase.Table("TabEntTck") & " where scheque = &1", "V")
  If hResult.Available Then
    Repeat
      If Mid(hResult!date, 7, 4) & Mid(hResult!date, 4, 2) & Left(hResult!date, 2) = Format$(DateChooser1.Value, "yyyy") & Format$(DateChooser1.Value, "mm") & Format$(DateChooser1.Value, "dd") Then
        Cptcli = hresult!client
        rResult = Utils.db.Exec("SELECT * FROM " & Cbase.Table("TabComptes") & " where compte_cc = &1", hResult!client)
        Nom = rresult!intitule_cc
        rResult = Utils.db.Exec("SELECT * FROM " & Tab & " where compte = &1 and type = &2", Client, "V")
        If rresult.Available Then
          MtTot = Val(Utils.cpoint(rResult!montant)) + Val(utils.cpoint(hResult!mcheque))
          Utils.db.Exec("UPDATE " & Tab & " set montant = &3, intitule = &4 Where compte = &1 and type = &2", Client, "V", MtTot, nom)
        Else
          Utils.db.Exec("INSERT INTO " & Tab & "(compte, type, montant, intitule) VALUES (&1, &2, &3, &4)", Client, "V", Val(Utils.cpoint(hResult!mcheque)), nom)
        Endif
        Csolde.Solde_caisse(Client)
      Endif
    Until hResult.MoveNext()
  Endif
  
  ' On fait le total des cartes
  MtTot = 0
  hResult = Utils.db.Exec("SELECT * FROM " & Cbase.Table("TabEntTck") & " where scarte = &1", "U")
  If hResult.Available Then
    Repeat
      If Mid(hResult!date, 7, 4) & Mid(hResult!date, 4, 2) & Left(hResult!date, 2) = Format$(DateChooser1.Value, "yyyy") & Format$(DateChooser1.Value, "mm") & Format$(DateChooser1.Value, "dd") Then
        Cptcli = hresult!client
        rResult = Utils.db.Exec("SELECT * FROM " & Cbase.Table("TabComptes") & " where compte_cc = &1", hResult!client)
        Nom = rresult!intitule_cc
        rResult = Utils.db.Exec("SELECT * FROM " & Tab & " where compte = &1 and type = &2", Client, "U")
        If rresult.Available Then
          MtTot = Val(Utils.cpoint(rResult!montant)) + Val(utils.cpoint(hResult!mcarte))
          Utils.db.Exec("UPDATE " & Tab & " set montant = &3, intitule = &4 Where compte = &1 and type = &2", Client, "U", MtTot, nom)
        Else
          Utils.db.Exec("INSERT INTO " & Tab & "(compte, type, montant, intitule) VALUES (&1, &2, &3, &4)", Client, "U", Val(Utils.cpoint(hResult!mcarte)), nom)
        Endif
        Csolde.Solde_caisse(Client)
      Endif
    Until hResult.MoveNext()
  Endif
  
  ' On génère l'écriture de trésorerie pour les especes
  hResult = Utils.db.Exec("SELECT * FROM " & Tab & " ")
  If hResult.Available Then
    numr = numr + 1
    numr2 = numr2 + 1
  Endif
  hResult = Utils.db.Exec("SELECT * FROM " & Tab & " where type = &1", "N")
  If hresult.Available Then
    Cptcli = hResult!compte
    Libel = "Espèces " & Datem
    Repeat
      If Val(Utils.cpoint(hResult!montant)) > 0 Then
        Utils.db.Exec("INSERT INTO " & Cbase.Table("TabMvt") & "(jour, numero, compte, intitule, dte, numdoc, numlot, libelle, montantd, montantc,validee, provisoire,tresorerie,lettree,Cloturee, datee, numerodef) VALUES (&1, &2, &3, &4, &5, &6, &7, &8, &9, &{10}, &{11}, &{12}, &{13}, &{14}, &{15}, &{16}, &{17})", Jnal, numr, Client, hResult!intitule, Utils.Cdate_Dbase(Datem), Nfac, Nfac, Libel, 0, hResult!montant, 1, 0, 1, 1, 1, Utils.Cdate_Dbase(Datem), numr2)
        Utils.db.Exec("INSERT INTO " & Cbase.Table("TabMvt") & "(jour,numero,compte,intitule,dte,numdoc, numlot, libelle, montantd, montantc,validee, provisoire,tresorerie,lettree,Cloturee, datee, numerodef) VALUES (&1, &2, &3, &4, &5, &6, &7, &8, &9, &{10}, &{11}, &{12}, &{13}, &{14}, &{15}, &{16}, &{17})", Jnal, numr, CptCaisse, "Espèces", Utils.Cdate_Dbase(Datem), Nfac, Nfac, Libel, hResult!montant, 0, 1, 0, 1, 1, 1, Utils.Cdate_Dbase(Datem), numr2)
      Else
        Mtd = hResult!montant
        Mtd = Abs(Mtd)
        Utils.db.Exec("INSERT INTO " & Cbase.Table("TabMvt") & "(jour, numero, compte, intitule, dte, numdoc, numlot, libelle, montantd, montantc,validee, provisoire,tresorerie,lettree,Cloturee, datee, numerodef) VALUES (&1, &2, &3, &4, &5, &6, &7, &8, &9, &{10}, &{11}, &{12}, &{13}, &{14}, &{15}, &{16}, &{17})", Jnal, numr, Client, hResult!intitule, Utils.Cdate_Dbase(Datem), Nfac, Nfac, Libel, Mtd, 0, 1, 0, 1, 1, 1, Utils.Cdate_Dbase(Datem), numr2)
        Utils.db.Exec("INSERT INTO " & Cbase.Table("TabMvt") & "(jour,numero,compte,intitule,dte,numdoc, numlot, libelle, montantd, montantc,validee, provisoire,tresorerie,lettree,Cloturee, datee, numerodef) VALUES (&1, &2, &3, &4, &5, &6, &7, &8, &9, &{10}, &{11}, &{12}, &{13}, &{14}, &{15}, &{16}, &{17})", Jnal, numr, CptCaisse, "Espèces", Utils.Cdate_Dbase(Datem), Nfac, Nfac, Libel, 0, Mtd, 1, 0, 1, 1, 1, Utils.Cdate_Dbase(Datem), numr2)
      Endif
      Csolde.Solde_caisse(Client)
      Csolde.Solde_caisse(CptCaisse)
      Maj_Collectif(cptcli, hResult!intitule, libel, hResult!montant)
    Until hresult.MoveNext()
  Endif
  ' On génère l'écriture de trésorerie pour les chèques
  hResult = Utils.db.Exec("SELECT * FROM " & Tab & " where type = &1", "V")
  If hresult.Available Then
    Cptcli = hResult!compte
    Libel = "Chèques caisse " & Datem
    Repeat
      If Val(Utils.cpoint(hResult!montant)) > 0 Then
        Utils.db.Exec("INSERT INTO " & Cbase.Table("TabMvt") & "(jour, numero, compte, intitule, dte, numdoc, numlot, libelle, montantd, montantc,validee, provisoire,tresorerie,lettree,Cloturee, datee, numerodef) VALUES (&1, &2, &3, &4, &5, &6, &7, &8, &9, &{10}, &{11}, &{12}, &{13}, &{14}, &{15}, &{16}, &{17})", Jnal, numr, Client, hResult!intitule, Utils.Cdate_Dbase(Datem), Nfac, Nfac, Libel, 0, hResult!montant, 1, 0, 1, 1, 1, Utils.Cdate_Dbase(Datem), numr2)
        Utils.db.Exec("INSERT INTO " & Cbase.Table("TabMvt") & "(jour,numero,compte,intitule,dte,numdoc, numlot, libelle, montantd, montantc,validee, provisoire,tresorerie,lettree,Cloturee, datee, numerodef) VALUES (&1, &2, &3, &4, &5, &6, &7, &8, &9, &{10}, &{11}, &{12}, &{13}, &{14}, &{15}, &{16}, &{17})", Jnal, numr, Vichq, "Virements internes chèques", Utils.Cdate_Dbase(Datem), Nfac, Nfac, Libel, hResult!montant, 0, 1, 0, 1, 1, 1, Utils.Cdate_Dbase(Datem), numr2)
      Else
        Mtd = hResult!montant
        Mtd = Abs(Mtd)
        Utils.db.Exec("INSERT INTO " & Cbase.Table("TabMvt") & "(jour, numero, compte, intitule, dte, numdoc, numlot, libelle, montantd, montantc,validee, provisoire,tresorerie,lettree,Cloturee, datee, numerodef) VALUES (&1, &2, &3, &4, &5, &6, &7, &8, &9, &{10}, &{11}, &{12}, &{13}, &{14}, &{15}, &{16}, &{17})", Jnal, numr, Client, hResult!intitule, Utils.Cdate_Dbase(Datem), Nfac, Nfac, Libel, 0, hResult!montant, 1, 0, 1, 1, 1, Utils.Cdate_Dbase(Datem), numr2)
        Utils.db.Exec("INSERT INTO " & Cbase.Table("TabMvt") & "(jour,numero,compte,intitule,dte,numdoc, numlot, libelle, montantd, montantc,validee, provisoire,tresorerie,lettree,Cloturee, datee, numerodef) VALUES (&1, &2, &3, &4, &5, &6, &7, &8, &9, &{10}, &{11}, &{12}, &{13}, &{14}, &{15}, &{16}, &{17})", Jnal, numr, Vichq, "Virements internes chèques", Utils.Cdate_Dbase(Datem), Nfac, Nfac, Libel, hResult!montant, 0, 1, 1, 1, 0, 1, Utils.Cdate_Dbase(Datem), numr2)
      Endif
      Csolde.Solde_caisse(Client)
      Csolde.Solde_caisse(Vichq)
      Maj_Collectif(cptcli, hResult!intitule, libel, hResult!montant)
    Until hresult.MoveNext()
  Endif
  ' On génère l'écriture de trésorerie pour les cartes
  hResult = Utils.db.Exec("SELECT * FROM " & Tab & " where type = &1", "U")
  If hresult.Available Then
    Cptcli = hResult!compte
    Libel = "Cartes caisse " & Datem
    Repeat
      If Val(Utils.cpoint(hResult!montant)) > 0 Then
        Utils.db.Exec("INSERT INTO " & Cbase.Table("TabMvt") & "(jour, numero, compte, intitule, dte, numdoc, numlot, libelle, montantd, montantc,validee, provisoire,tresorerie,lettree,Cloturee, datee, numerodef) VALUES (&1, &2, &3, &4, &5, &6, &7, &8, &9, &{10}, &{11}, &{12}, &{13}, &{14}, &{15}, &{16}, &{17})", Jnal, numr, Client, hResult!intitule, Utils.Cdate_Dbase(Datem), Nfac, Nfac, Libel, 0, hResult!montant, 1, 0, 1, 1, 1, Utils.Cdate_Dbase(Datem), numr2)
        Utils.db.Exec("INSERT INTO " & Cbase.Table("TabMvt") & "(jour,numero,compte,intitule,dte,numdoc, numlot, libelle, montantd, montantc,validee, provisoire,tresorerie,lettree,Cloturee, datee, numerodef) VALUES (&1, &2, &3, &4, &5, &6, &7, &8, &9, &{10}, &{11}, &{12}, &{13}, &{14}, &{15}, &{16}, &{17})", Jnal, numr, Vic, "Virements internes cartes", Utils.Cdate_Dbase(Datem), Nfac, Nfac, Libel, hResult!montant, 0, 1, 0, 1, 1, 1, Utils.Cdate_Dbase(Datem), numr2)
      Else
        Mtd = hResult!montant
        Mtd = Abs(Mtd)
        Utils.db.Exec("INSERT INTO " & Cbase.Table("TabMvt") & "(jour, numero, compte, intitule, dte, numdoc, numlot, libelle, montantd, montantc,validee, provisoire,tresorerie,lettree,Cloturee, datee, numerodef) VALUES (&1, &2, &3, &4, &5, &6, &7, &8, &9, &{10}, &{11}, &{12}, &{13}, &{14}, &{15}, &{16}, &{17})", Jnal, numr, Client, hResult!intitule, Utils.Cdate_Dbase(Datem), Nfac, Nfac, Libel, 0, hResult!montant, 1, 0, 1, 1, 1, Utils.Cdate_Dbase(Datem), numr2)
        Utils.db.Exec("INSERT INTO " & Cbase.Table("TabMvt") & "(jour,numero,compte,intitule,dte,numdoc, numlot, libelle, montantd, montantc,validee, provisoire,tresorerie,lettree,Cloturee, datee, numerodef) VALUES (&1, &2, &3, &4, &5, &6, &7, &8, &9, &{10}, &{11}, &{12}, &{13}, &{14}, &{15}, &{16}, &{17})", Jnal, numr, Vic, "Virements internes cartes", Utils.Cdate_Dbase(Datem), Nfac, Nfac, Libel, hResult!montant, 0, 1, 0, 1, 1, 1, Utils.Cdate_Dbase(Datem), numr2)
      Endif
      Csolde.Solde_caisse(Client)
      Csolde.Solde_caisse(Vic)
      Maj_Collectif(cptcli, hResult!intitule, libel, hResult!montant)
    Until hresult.MoveNext()
  Endif
  Majnum()
  
End

Public Sub Maj_Collectif(Cpt As String, intit As String, libel As String, Mnt As Float)
  
  Dim Coll As String
  Dim Mtc As Float
  Dim Mtd As Float
  Dim Sld As Float
  Dim cResult As Result
  Dim Numlt As String = Format$(DateChooser1.Value, "ddmmyyyy")
  
  cResult = Utils.db.Exec("SELECT * FROM " & Cbase.Table("TabComptes") & " Where compte_cc = &1", Cpt)
  coll = cResult!coll_cc
  cResult = Utils.db.Exec("SELECT * FROM " & Cbase.Table("TabMvt") & " Where compte = &1 and numero = &2 and numerodef = &3", Coll, numr, numr2)
  If cResult.Available Then
    If Mnt > 0 Then
      Mtd = 0
      Mtc = Mnt + cResult!montantc
    Else
      Mtc = 0
      Mtd = Mnt + cResult!montantd
    Endif
    Utils.db.Exec("UPDATE " & Cbase.Table("TabMvt") & " set montantc = &4 Where compte = &1 and numero = &2 and numerodef = &3", Coll, numr, numr2, mtc)
  Else
    Mtc = Mnt
    Utils.db.Exec("INSERT INTO " & Cbase.Table("TabMvt") & "(jour, numero, compte, collectif, intitule, dte, libelle, montantd, montantc, validee, provisoire, tresorerie, pointee, lettree, cloturee, relance, numerodef, numdoc, numlot) VALUES (&1, &2, &3, &4, &5, &6, &7, &8, &9, &{10}, &{11}, &{12}, &{13}, &{14}, &{15}, &{16}, &{17}, &{18}, &{19})", Jnal, numr, coll, 1, Intit, Utils.Cdate_Dbase(Datem), Libel, Mtd, Mtc, 1, 0, 1, 0, 0, 1, 0, numr2, Numlt, numlt)
  Endif
  cResult = Utils.db.Exec("SELECT * FROM " & Cbase.Table("TabComptes") & " Where compte_cc = &1", coll)
  If cResult!solde = "" Then
    Sld = Mtd - Mtc
  Else
    Sld = cResult!solde + Mtd - Mtc
  Endif
  Utils.db.Exec("UPDATE " & Cbase.Table("TabComptes") & " set solde = &2 Where compte_cc = &1", coll, Sld)
  
End

'**********************************
'*    Appel de la doc html        *
'**********************************
Public Sub Button3_Click()
  
  Exec ["xdg-open", Application.Path &/ "Doc_Caisse/Moulinage.html"]
  
End
